// generated by Fast Light User Interface Designer (fluid) version 1.0304

#include "flkeyboard.h"
#include "headerf.h"

void addkeys() {
  keylist->clear();
  
  keylist->add( "us" );
  keylist->add( "uk" );
  keylist->add( "it" );
  keylist->add( "de" );
  keylist->add( "es" );
  keylist->add( "sp" );
  keylist->add( "br" );
  keylist->add( "fr" );
  
  
  keylist->add( "pl" );
  keylist->add( "at" );
  keylist->add( "ru" );
  keylist->add( "ch" );
  keylist->add( "jp" );
}

Fl_Double_Window *win=(Fl_Double_Window *)0;

Fl_Browser *keylist=(Fl_Browser *)0;

static void cb_keylist(Fl_Browser*, void*) {
  selection->value( keylist->text( keylist->value() ));
}

static void cb_Apply(Fl_Button*, void*) {
  char str[2500];  
              
    snprintf( str, sizeof(str), "  setxkbmap  %s  ",  selection->value()  );

         system( str );
}

static void cb_Quit(Fl_Button*, void*) {
  exit( 0 );
}

Fl_Input *selection=(Fl_Input *)0;

Fl_Double_Window* make_window() {
  { win = new Fl_Double_Window(400, 435);
    { Fl_Group* o = new Fl_Group(10, 30, 260, 365, "Keyboard Layout");
      o->box(FL_UP_FRAME);
      { keylist = new Fl_Browser(20, 40, 240, 340);
        keylist->callback((Fl_Callback*)cb_keylist);
        keylist->type( FL_HOLD_BROWSER);
      } // Fl_Browser* keylist
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(275, 30, 115, 365, "Modes");
      o->box(FL_UP_BOX);
      { Fl_Button* o = new Fl_Button(285, 275, 90, 45, "&Apply");
        o->callback((Fl_Callback*)cb_Apply);
      } // Fl_Button* o
      { new Fl_Clock(285, 40, 92, 85);
      } // Fl_Clock* o
      { Fl_Button* o = new Fl_Button(285, 340, 90, 45, "&Quit");
        o->callback((Fl_Callback*)cb_Quit);
      } // Fl_Button* o
      o->end();
    } // Fl_Group* o
    { selection = new Fl_Input(10, 400, 380, 25);
      selection->color(FL_BACKGROUND_COLOR);
    } // Fl_Input* selection
    addkeys();
    win->end();
  } // Fl_Double_Window* win
  win->show();
  return win;
}

int main() {
  make_window();
    Fl::run();
    return 0;
}
