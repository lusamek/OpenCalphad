# data file for the Fltk User Interface Designer (fluid)
version 1.0304
header_name {.h}
code_name {.cxx}
decl {\#include <stdio.h>} {private local
}

decl {\#include <stdlib.h>} {private local
}

decl {\#include "ccode.h"} {private local
}

decl {\#include <FL/Fl_Output.H>} {private local
}

decl {\#include "flopencalphad_def.h"} {private local
}

Function {redraw()} {open
} {
  code {printf("Redraw!\\n");


strncpy( var_calc_x ,  input_var_calc_x->value() , PATH_MAX );
strncpy( var_calc_y ,  input_var_calc_y->value() , PATH_MAX );
// strncpy( var_plot_x ,  input_var_plot_x->value() , PATH_MAX );
// strncpy( var_plot_y ,  input_var_plot_y->value() , PATH_MAX );
strncpy( var_tdb_database, input_var_tdb_database->value(), PATH_MAX );  

strncpy( var_system ,      output_system->value() , PATH_MAX );
// output_system->value( "fe c" );
// output_system->value( var_system  );} {}
}

Function {make_window()} {open
} {
  Fl_Window win1 {
    label Notes open
    xywh {1127 298 775 700} type Double resizable visible
  } {
    Fl_Box {} {
      label {FLTK OpenCalphad}
      xywh {30 25 710 30} box ENGRAVED_BOX labeltype ENGRAVED_LABEL
    }
    Fl_Group {} {
      label {1. Element} open
      xywh {30 85 350 155} box DOWN_BOX labeltype ENGRAVED_LABEL
    } {
      Fl_Button {} {
        label Fe
        callback {printf( " Fe Element Selected\\n" );

// printf( "%s\\n" ,   inputline->value( browser1->text(  browser1->value() )  ) ) ;

  strncat( var_system , "fe" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
  output_system->value( var_system );
  
  redraw();}
        xywh {40 95 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label C
        callback {printf( " C Selected\\n" );



  strncat( var_system , "c" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );

redraw();}
        xywh {100 95 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label Mn
        callback {printf( " Mn Selected\\n" );


  strncat( var_system , "mn" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );
    
redraw();}
        xywh {160 95 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label Al
        callback {printf( " Al Selected\\n" );


  strncat( var_system , "al" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );  

redraw();}
        xywh {220 95 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label Si
        callback {// printf( "%s\\n" ,   inputline->value( browser1->text(  browser1->value() )  ) ) ;


printf( " Si Selected\\n" );

  strncat( var_system , "si" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );


redraw();}
        xywh {280 95 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label V
        callback {printf( " V Selected\\n" );


  strncat( var_system , "v" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );

redraw();}
        xywh {280 185 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label Mo
        callback {printf( " Mo Selected\\n" );

  strncat( var_system , "mo" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );

redraw();}
        xywh {159 140 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label Cr
        callback {printf( " Cr Selected\\n" );


  strncat( var_system , "cr" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );

redraw();}
        xywh {100 140 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label Cu
        callback {printf( " Cu Selected\\n" );

  strncat( var_system , "cu" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );


redraw();}
        xywh {100 185 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label Nb
        callback {printf( " nb Selected\\n" );


  strncat( var_system , "nb" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );
    
    
redraw();}
        xywh {280 140 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label Ni
        callback {printf( " ni Selected\\n" );


  strncat( var_system , "ni" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );

redraw();}
        xywh {40 140 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label Ag
        callback {printf( " ag Selected\\n" );


  strncat( var_system , "ag" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );

redraw();}
        xywh {40 185 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label Ti
        callback {printf( " ti Selected\\n" );


  strncat( var_system , "ti" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );

redraw();}
        xywh {220 140 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label Zn
        callback {printf( " zn Selected\\n" );


  strncat( var_system , "zn" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );

redraw();}
        xywh {160 185 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label W
        callback {printf( " w Selected\\n" );


  strncat( var_system , "w" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );

redraw();}
        xywh {220 185 45 35} labelfont 1 labelsize 12
      }
    }
    Fl_Group {} {
      label {2. Compute} open
      xywh {30 270 350 150} box DOWN_FRAME labeltype ENGRAVED_LABEL resizable
    } {
      Fl_Output output_system {
        label System
        xywh {95 285 205 25} color 49
        code1 {output_system->value( "fe c" );}
      }
      Fl_Button {} {
        label CA
        callback {printf( " Clr \\n" );

// printf( "%s\\n" ,   inputline->value( browser1->text(  browser1->value() )  ) ) ;

   strncpy( var_system, "", PATH_MAX );
   output_system->value( var_system );  

   redraw();}
        xywh {305 285 30 25} labelfont 1 labelsize 12
      }
      Fl_Input input_var_calc_x {
        label {X var.}
        xywh {95 315 205 25}
        code1 {input_var_calc_x->value( "c" );}
      }
      Fl_Button {} {
        label CA
        callback {printf( " Clr \\n" );

// printf( "%s\\n" ,   inputline->value( browser1->text(  browser1->value() )  ) ) ;

input_var_calc_x->value( "" );

redraw();}
        xywh {305 315 30 25} labelfont 1 labelsize 12
      }
      Fl_Input input_var_calc_y {
        label {Y var.}
        xywh {95 345 205 25}
        code1 {input_var_calc_y->value( "T" );}
      }
      Fl_Button {} {
        label CA
        callback {printf( " Clr \\n" );

// printf( "%s\\n" ,   inputline->value( browser1->text(  browser1->value() )  ) ) ;

input_var_calc_y->value( "" );

redraw();}
        xywh {305 345 30 25} labelfont 1 labelsize 12
      }
      Fl_Input input_var_tdb_database {
        label TDB
        xywh {95 375 205 25}
        code1 {input_var_tdb_database->value( "steel1.tdb" );}
      }
      Fl_Button {} {
        label CA
        callback {printf( " Clr \\n" );

// printf( "%s\\n" ,   inputline->value( browser1->text(  browser1->value() )  ) ) ;

input_var_tdb_database->value( "" );

redraw();}
        xywh {305 375 30 25} labelfont 1 labelsize 12
      }
    }
    Fl_Button {} {
      label {&Quit}
      callback {exit( 0 );}
      xywh {640 650 95 30}
    }
    Fl_Group {} {
      label {3. OCM GNUPlot} open
      xywh {30 450 350 170} box DOWN_BOX labeltype ENGRAVED_LABEL
    } {
      Fl_Button {} {
        label {[&3] Compute!}
        callback {char mydirnow[2500];
  printf( "Current Directory: %s \\n", getcwd( mydirnow, 2500 ) );



  redraw();
  nsystem(  "  screen -d  -m   xterm -e   oc   macro.ocm " );
  
  // oc6 bug 
  // gnuplot ocgnu.plt  &}
        xywh {135 540 145 25}
      }
      Fl_Button {} {
        label {[&2] Edit!}
        callback {redraw();

nsystem( "  screen -d -m fledit  macro.ocm " );}
        xywh {135 505 145 25}
      }
      Fl_Button {} {
        label {[&1] Create!}
        callback {redraw();

clear_plot();


create_macro( );}
        xywh {135 470 145 25}
      }
      Fl_Button {} {
        label {[&4] Plot!}
        callback {char mydirnow[2500];
  printf( "Current Directory: %s \\n", getcwd( mydirnow, 2500 ) );



  redraw();
  nsystem(  "  screen -d  -m  gnuplot ocgnu.plt  " );
  
  
  // oc6 bug 
  // gnuplot ocgnu.plt  &}
        xywh {135 575 145 25}
      }
    }
    Fl_Button {} {
      label {&Option}
      callback {win3->show();}
      xywh {555 650 80 30}
    }
    Fl_Group {} {
      label Output open
      xywh {390 85 345 535} box DOWN_BOX labeltype ENGRAVED_LABEL
    } {}
    Fl_Button {} {
      label {&Database}
      callback {win2->show();}
      xywh {30 650 80 30}
    }
    Fl_Button {} {
      label {&Plot}
      callback {win4->show();}
      xywh {120 650 80 30}
    }
    Fl_Button {} {
      label {&Macro}
      callback {win5->show();}
      xywh {210 650 80 30}
    }
  }
  Fl_Window win2 {open
    xywh {189 240 890 330} type Double resizable visible
  } {
    Fl_Box {} {
      label {FLTK OpenCalphad -- Database}
      xywh {15 25 855 35} box ENGRAVED_BOX labeltype ENGRAVED_LABEL
    }
    Fl_Group {} {
      label Browser open
      xywh {15 95 390 215} box DOWN_BOX labeltype ENGRAVED_LABEL
    } {
      Fl_Browser browser1 {
        callback {printf( "Click\\n" );



 input_var_tdb_database->value(  browser1->text(   browser1->value() ) ); 
 

redraw();}
        xywh {25 110 370 155} resizable
        code1 {browser1->type(FL_HOLD_BROWSER);}
      }
      Fl_Input input_notes {
        label Notes
        tooltip Demo xywh {75 275 165 25} color 55
      }
      Fl_Button {} {
        label {&Add}
        callback {browser1->add(   input_notes->value()  );

// if (  browser1->value() >= 1 )  printf( "%s\\n" ,   browser1->text(  browser1->value() )  )  ;}
        xywh {245 275 45 25}
      }
    }
    Fl_Group {} {
      label Database open
      xywh {415 95 450 215} box DOWN_BOX labeltype ENGRAVED_LABEL
    } {
      Fl_Button {} {
        label {&Edit}
        callback {redraw();
  
  char charo[PATH_MAX];
  strncpy( charo, "", PATH_MAX );
  strncat( charo , " screen -d -m  fledit  " , PATH_MAX - strlen( charo ) -1 );
  strncat( charo , " " , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , " \\"" , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , var_tdb_database , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , "\\" " , PATH_MAX -  strlen( charo ) -1 );
  nsystem(  charo );}
        xywh {440 115 50 25}
      }
      Fl_Button {} {
        label {ls tdb}
        callback {redraw();

  printf( "============================\\n" );
  printf( "   DATABASE                 \\n" );
  printf( "============================\\n" );
  
  nlsgrep( ".tdb" );
  nlsgrep( ".TDB" );}
        xywh {495 115 50 25}
      }
      Fl_Button {} {
        label {Elemen&t}
        callback {redraw();
  
  
  printf( "============================\\n" );
  printf( "   ELEMENT                  \\n" );
  printf( "============================\\n" );
  
  
  
  filegrep( var_tdb_database , "ELEM" );}
        xywh {550 115 75 25}
      }
      Fl_Button {} {
        label Browse
        callback {redraw();

  printf( "============================\\n" );
  printf( "   DATABASE                 \\n" );
  printf( "============================\\n" );
  
  nlsgrep( ".tdb" );
  nlsgrep( ".TDB" );
  
  
  printf( "============================\\n" );
  printf( "   DATABASE                 \\n" );
  printf( "============================\\n" );

  
        browser1->clear();
	DIR *dirp;
	struct dirent *dp;
	dirp = opendir( "." );
	while  ((dp = readdir( dirp )) != NULL ) 
	{
		if (  strcmp( dp->d_name, "." ) != 0 )
		if (  strcmp( dp->d_name, ".." ) != 0 )
                {
                    if ( ( strstr( dp->d_name, ".TDB" ) != 0 )  || ( strstr( dp->d_name, ".tdb" ) != 0 )  ) 
                    {
			printf( "%s\\n", dp->d_name );
 		        browser1->add(  dp->d_name  );
 		     }
                }
	}
	closedir( dirp );}
        xywh {630 115 70 25}
      }
      Fl_Button {} {
        label {&Species}
        callback {redraw();
  
  
  printf( "============================\\n" );
  printf( "   SPECIES                  \\n" );
  printf( "============================\\n" );
  
  
  
  filegrep( var_tdb_database , "SPECIE" );}
        xywh {550 145 75 25}
      }
      Fl_Button {} {
        label Path
        callback {redraw();

  printf( "============================\\n" );
  printf( "   PATH                     \\n" );
  printf( "============================\\n" );
  
    char mydirnow[2500];
  printf( "Current Directory: %s \\n", getcwd( mydirnow, 2500 ) );}
        xywh {495 145 50 25}
      }
    }
  }
  Fl_Window win3 {open
    xywh {961 52 400 210} type Double resizable visible
  } {
    Fl_Box {} {
      label {FLTK OpenCalphad -- Option}
      xywh {10 15 380 35} box ENGRAVED_BOX labeltype ENGRAVED_LABEL
    }
    Fl_Group {} {
      label {System Call} open
      xywh {20 105 365 80} box DOWN_BOX labeltype ENGRAVED_LABEL
    } {
      Fl_Button {} {
        label {&ls}
        callback {nls();}
        xywh {30 115 50 25}
      }
      Fl_Button {} {
        label {&xterm}
        callback {nsystem( " screen -d -m xterm " );}
        xywh {85 115 50 25}
      }
      Fl_Button {} {
        label {&calc}
        callback {nsystem( " screen -d -m fl48 " );}
        xywh {140 115 50 25}
      }
      Fl_Button {} {
        label {&fledit}
        callback {nsystem( " screen -d -m fledit " );}
        xywh {195 115 50 25}
      }
      Fl_Button {} {
        label ccode
        callback {nsystem( " screen -d -m fledit flopencalphad_def.h  " );}
        xywh {250 115 50 25}
      }
      Fl_Button {} {
        label Path
        callback {redraw();

  printf( "============================\\n" );
  printf( "   PATH                     \\n" );
  printf( "============================\\n" );
  
    char mydirnow[2500];
  printf( "Current Directory: %s \\n", getcwd( mydirnow, 2500 ) );}
        xywh {305 115 50 25}
      }
      Fl_Button {} {
        label rox
        callback {nsystem( " rox " );}
        xywh {30 150 50 25}
      }
    }
  }
  Fl_Window win4 {open
    xywh {1076 695 845 370} type Double visible
  } {
    Fl_Box {} {
      label {FLTK OpenCalphad -- Plot} selected
      xywh {20 25 800 35} box ENGRAVED_BOX labeltype ENGRAVED_LABEL
    }
    Fl_Group {} {
      label Plot open
      xywh {20 105 800 220} box DOWN_BOX labeltype ENGRAVED_LABEL
    } {
      Fl_Button {} {
        label {Close &Plots}
        callback {nsystem( " pkill gnuplot " );}
        xywh {30 115 90 25}
      }
    }
  }
  Fl_Window win5 {open
    xywh {196 596 885 345} type Double resizable visible
  } {
    Fl_Box {} {
      label {FLTK OpenCalphad -- Macro}
      xywh {30 15 830 35} box ENGRAVED_BOX labeltype ENGRAVED_LABEL
    }
    Fl_Group {} {
      label Browser open
      xywh {25 110 390 215} box DOWN_BOX labeltype ENGRAVED_LABEL
    } {
      Fl_Browser browser2 {
        callback {printf( "Click\\n" );


 input_var_macro_filename->value(  browser2->text(   browser2->value() ) ); 


 redraw();}
        xywh {35 125 370 155} resizable
        code1 {browser2->type(FL_HOLD_BROWSER);}
      }
      Fl_Input input_var_macro_filename {
        label Filename
        xywh {95 290 310 25}
      }
    }
    Fl_Group {} {
      label Macro open
      xywh {430 110 430 215} box DOWN_BOX labeltype ENGRAVED_LABEL
    } {
      Fl_Button {} {
        label Browse
        callback {redraw();

  printf( "============================\\n" );
  printf( "   MACRO                    \\n" );
  printf( "============================\\n" );
  
  nlsgrep( ".ocm" );
  nlsgrep( ".OCM" );
  
   
        browser2->clear();
	DIR *dirp;
	struct dirent *dp;
	dirp = opendir( "." );
	while  ((dp = readdir( dirp )) != NULL ) 
	{
		if (  strcmp( dp->d_name, "." ) != 0 )
		if (  strcmp( dp->d_name, ".." ) != 0 )
                {
                    if ( ( strstr( dp->d_name, ".OCM" ) != 0 )  || ( strstr( dp->d_name, ".ocm" ) != 0 )  ) 
                    {
			printf( "%s\\n", dp->d_name );
 		        browser2->add(  dp->d_name  );
 		     }
                }
	}
	closedir( dirp );}
        xywh {450 130 70 25}
      }
      Fl_Button {} {
        label {&Edit}
        callback {redraw();
  
  char charo[PATH_MAX];
  strncpy( charo, "", PATH_MAX );
  strncat( charo , " screen -d -m  fledit  " , PATH_MAX - strlen( charo ) -1 );
  strncat( charo , " " , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , " \\"" , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , input_var_macro_filename->value() , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , "\\" " , PATH_MAX -  strlen( charo ) -1 );
  nsystem(  charo );}
        xywh {530 130 50 25}
      }
      Fl_Button {} {
        label {&Use macro}
        callback {redraw();

  printf( "============================\\n" );
  printf( "   MACRO                    \\n" );
  printf( "============================\\n" );
  
  printf( "   FILECOPY                  \\n" );
  printf( "   Source: %s                  \\n" ,  input_var_macro_filename->value()   );
  printf( "   Destination: %s                  \\n" ,  "macro.ocm"   );
  

  ncp( "macro.ocm" ,   input_var_macro_filename->value() );}
        xywh {590 130 100 25}
      }
    }
  }
}

Function {addkeypress( int keypress )} {open
} {
  code {//char str[PATH_MAX]; 
   //snprintf( str , sizeof( str ), "%s%c", inputline->value() , keypress ); 
   //inputline->value( str  );} {}
}

Function {main( int argc, char *argv[])} {open return_type int
} {
  code {// working dir 
  if ( argc == 2)
  if ( strcmp( argv[1] , "" ) !=  0 )
  {
          chdir( argv[ 1 ] );
  }
  
  char mydirnow[2500];
  printf( "Current Directory: %s \\n", getcwd( mydirnow, 2500 ) );

  // vars
  strncpy( var_system, "", PATH_MAX);
  

  make_window();
  win1->show();

  Fl::run();} {}
}
