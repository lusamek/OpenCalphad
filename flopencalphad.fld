# data file for the Fltk User Interface Designer (fluid)
version 1.0304
header_name {.h}
code_name {.cxx}
decl {\#include <stdio.h>} {private local
}

decl {\#include <stdlib.h>} {private local
}

decl {\#include "ccode.h"} {private local
}

decl {int plot_adv_computer_skipint_int = 0;} {private local
}

decl {\#include <FL/Fl_Output.H>} {private local
}

decl {\#include "flopencalphad_def.h"} {private local
}

Function {redraw()} {open
} {
  code {printf("> Procedure redraw!\\n");


strncpy( var_calc_x ,  input_var_calc_x->value() , PATH_MAX );
strncpy( var_calc_y ,  input_var_calc_y->value() , PATH_MAX );
// strncpy( var_plot_x ,  input_var_plot_x->value() , PATH_MAX );
// strncpy( var_plot_y ,  input_var_plot_y->value() , PATH_MAX );
strncpy( var_tdb_database, input_var_tdb_database->value(), PATH_MAX );  

strncpy( var_system ,      output_system->value() , PATH_MAX );
// output_system->value( "fe c" );
// output_system->value( var_system  );

// input_var_set_condition->value( "t=1000 p=1e5 n=1 x(c)=0.2 " );} {}
  code {printf("Conditions\\n");} {}
}

Function {make_window()} {open
} {
  Fl_Window win1 {
    label FLOPENCALPHAD open
    xywh {257 475 785 695} type Double resizable visible
  } {
    Fl_Box {} {
      label {FLTK OpenCalphad}
      xywh {25 10 730 30} box ENGRAVED_BOX labeltype ENGRAVED_LABEL
    }
    Fl_Group {} {
      label {1. Element} open
      xywh {25 70 350 150} box DOWN_BOX labeltype ENGRAVED_LABEL
    } {
      Fl_Button {} {
        label Fe
        callback {printf( " Fe Element Selected\\n" );


  if ( var_calc_number_element == 1 ) 
     input_var_calc_x->value( "fe" );

// printf( "%s\\n" ,   inputline->value( browser1->text(  browser1->value() )  ) ) ;

  strncat( var_system , "fe" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " ,  PATH_MAX -  strlen( var_system ) -1 );
  output_system->value( var_system );
  var_calc_number_element++;
  add_new_element( "fe" );
  redraw();}
        xywh {35 80 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label C
        callback {printf( " C Selected\\n" );


  if ( var_calc_number_element == 1 ) 
     input_var_calc_x->value( "c" );

  strncat( var_system , "c" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );


  var_calc_number_element++;

  add_new_element( "c" );  


redraw();}
        xywh {95 80 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label Mn
        callback {printf( " Mn Selected\\n" );


  if ( var_calc_number_element == 1 ) 
     input_var_calc_x->value( "mn" );

  strncat( var_system , "mn" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );
    
  var_calc_number_element++;
  

  add_new_element( "mn" );  


redraw();}
        xywh {155 80 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label Al
        callback {printf( " Al Selected\\n" );

  if ( var_calc_number_element == 1 ) 
     input_var_calc_x->value( "al" );


  strncat( var_system , "al" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );  

  var_calc_number_element++;
  
  
  add_new_element( "al" );  


  

redraw();}
        xywh {215 80 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label Si
        callback {// printf( "%s\\n" ,   inputline->value( browser1->text(  browser1->value() )  ) ) ;


printf( " Si Selected\\n" );

  
  if ( var_calc_number_element == 1 ) 
     input_var_calc_x->value( "si" );

  strncat( var_system , "si" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
  output_system->value( var_system );

  var_calc_number_element++;
  

  add_new_element( "si" );  


 redraw();}
        xywh {275 80 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label V
        callback {printf( " V Selected\\n" );

  if ( var_calc_number_element == 1 ) 
     input_var_calc_x->value( "v" );

  strncat( var_system , "v" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );

  var_calc_number_element++;
  
  add_new_element( "v" );  



redraw();}
        xywh {275 170 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label Mo
        callback {printf( " Mo Selected\\n" );

  if ( var_calc_number_element == 1 ) 
     input_var_calc_x->value( "mo" );

  strncat( var_system , "mo" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );

  var_calc_number_element++;
  

  add_new_element( "mo" );  


redraw();}
        xywh {154 125 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label Cr
        callback {printf( " Cr Selected\\n" );


  if ( var_calc_number_element == 1 ) 
     input_var_calc_x->value( "cr" );

  strncat( var_system , "cr" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );

  var_calc_number_element++;
  
  add_new_element( "cr" );  



redraw();}
        xywh {95 125 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label Cu
        callback {printf( " Cu Selected\\n" );

  if ( var_calc_number_element == 1 ) 
     input_var_calc_x->value( "cu" );

  strncat( var_system , "cu" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );

  var_calc_number_element++;
  

  add_new_element( "cu" );  



redraw();}
        xywh {95 170 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label Nb
        callback {printf( " nb Selected\\n" );

  if ( var_calc_number_element == 1 ) 
     input_var_calc_x->value( "nb" );

  strncat( var_system , "nb" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );
    
  var_calc_number_element++;
  

  add_new_element( "nb" );  

redraw();}
        xywh {275 125 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label Ni
        callback {printf( " ni Selected\\n" );


  if ( var_calc_number_element == 1 ) 
     input_var_calc_x->value( "ni" );

  strncat( var_system , "ni" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );

  var_calc_number_element++;
  
  
  add_new_element( "ni" );  


  

redraw();}
        xywh {35 125 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label Ag
        callback {printf( " ag Selected\\n" );

  if ( var_calc_number_element == 1 ) 
     input_var_calc_x->value( "ag" );

  strncat( var_system , "ag" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );

  var_calc_number_element++;
  
  add_new_element( "ag" );  



redraw();}
        xywh {35 170 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label Ti
        callback {printf( " ti Selected\\n" );


  if ( var_calc_number_element == 1 ) 
     input_var_calc_x->value( "ti" );

  strncat( var_system , "ti" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );

  var_calc_number_element++;
  

  add_new_element( "ti" );  


redraw();}
        xywh {215 125 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label Zn
        callback {printf( " zn Selected\\n" );

  if ( var_calc_number_element == 1 ) 
     input_var_calc_x->value( "zn" );

  strncat( var_system , "zn" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );

  var_calc_number_element++;
  
  add_new_element( "zn" );  



redraw();}
        xywh {155 170 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label W
        callback {printf( " w Selected\\n" );

  if ( var_calc_number_element == 1 ) 
     input_var_calc_x->value( "w" );

  strncat( var_system , "w" , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " , PATH_MAX -  strlen( var_system ) -1 );
    output_system->value( var_system );

  var_calc_number_element++;
  
  add_new_element( "w" );  



redraw();}
        xywh {215 170 45 35} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label {...}
        callback {form_element_pse->show();}
        xywh {330 80 40 35}
      }
    }
    Fl_Group {} {
      label {2. Create Macro} open
      xywh {25 265 350 140} box DOWN_FRAME labeltype ENGRAVED_LABEL
    } {
      Fl_Output output_system {
        label System
        xywh {85 280 205 25} color 49
        code1 {output_system->value( "fe c " );}
        code2 {var_calc_number_element = 2;}
      }
      Fl_Button {} {
        label CA
        callback {input_var_set_condition->value( " t=1000 p=1e5 n=1  " );
   
   strncpy( var_system, "", PATH_MAX );
   output_system->value( var_system ); 
   
   var_calc_number_element = 0; 

   redraw();}
        xywh {295 280 30 25} labelfont 1 labelsize 12
      }
      Fl_Input input_var_calc_x {
        label {X var.}
        xywh {85 310 205 25}
        code1 {input_var_calc_x->value( "c" );}
      }
      Fl_Button {} {
        label CA
        callback {printf( " Clr \\n" );

// printf( "%s\\n" ,   inputline->value( browser1->text(  browser1->value() )  ) ) ;

input_var_calc_x->value( "" );

redraw();}
        xywh {295 310 30 25} labelfont 1 labelsize 12
      }
      Fl_Input input_var_calc_y {
        label {Y var.}
        xywh {85 340 205 25}
        code1 {input_var_calc_y->value( "T" );}
      }
      Fl_Button {} {
        label CA
        callback {printf( " Clr \\n" );

// printf( "%s\\n" ,   inputline->value( browser1->text(  browser1->value() )  ) ) ;

input_var_calc_y->value( "" );

redraw();}
        xywh {295 340 30 25} labelfont 1 labelsize 12
      }
      Fl_Input input_var_tdb_database {
        label TDB
        xywh {85 370 205 25}
        code1 {input_var_tdb_database->value( "steel1.tdb" );}
      }
      Fl_Button {} {
        label CA
        callback {printf( " Clr \\n" );

// printf( "%s\\n" ,   inputline->value( browser1->text(  browser1->value() )  ) ) ;

input_var_tdb_database->value( "" );

redraw();}
        xywh {295 370 30 25} labelfont 1 labelsize 12
      }
      Fl_Button {} {
        label SGTE
        callback {char str[PATH_MAX];
      strncpy( str, output_system->value(), PATH_MAX ); 
      int foocplt = 0;
      
      char ptr[strlen(str)+1];
      int i,j=0;
      for(i=0; str[i]!='\\0'; i++)
      {
        if ( str[i] == ' ' )
        {
          if ( foocplt == 0 ) 
          {
             ptr[j++]='-';   
             foocplt = 1 ; 
          }
        }
        else if (str[i] != '\\n' && str[i] != '\\n') 
          ptr[j++]=str[i];
      } 
      ptr[j]='\\0';

 

  char foostr[PATH_MAX];
  
   
  if ( fexist( "/usr/bin/dillo" ) == 1 ) 
     snprintf( foostr , sizeof( foostr ), "%s%s.jpg' " ,  "    screen -d -m  /usr/bin/dillo  'https://www.crct.polymtl.ca/fact/documentation/SGTE2017/" , ptr );  // ptr
  
  
  // ssl https... 
  else if ( fexist( "/usr/bin/chromium" ) == 1 ) 
      snprintf( foostr , sizeof( foostr ), "%s%s.jpg' " ,  "    screen -d -m  /usr/bin/chromium  'https://www.crct.polymtl.ca/fact/documentation/SGTE2017/" , ptr );  // ptr

  else if ( fexist( "/usr/bin/chromium-browser" ) == 1 ) 
      snprintf( foostr , sizeof( foostr ), "%s%s.jpg' " ,  "    screen -d -m  /usr/bin/chromium-browser  'https://www.crct.polymtl.ca/fact/documentation/SGTE2017/" , ptr );  // ptr

  
  else if ( fexist( "/usr/bin/firefox" ) == 1 ) 
      snprintf( foostr , sizeof( foostr ), "%s%s.jpg' " ,  "    screen -d -m  /usr/bin/firefox  'https://www.crct.polymtl.ca/fact/documentation/SGTE2017/" , ptr );  // ptr


  else 
      snprintf( foostr , sizeof( foostr ), "%s%s.jpg' " ,  "    screen -d -m  dillo  'https://www.crct.polymtl.ca/fact/documentation/SGTE2017/" , ptr );  // ptr
  
  printf( "CMD %s\\n", foostr ); 
  system( foostr ) ;
  
  
  
   
   
// https://www.crct.polymtl.ca/fact/documentation/SGTE2017/Al-Si.jpg
// var_input_floc_elements->value( "" );}
        xywh {330 280 40 25} labelfont 1 labelsize 12
      }
    }
    Fl_Button {} {
      label {&Quit}
      callback {exit( 0 );}
      xywh {690 650 65 30}
    }
    Fl_Group {} {
      label {3. OCM GNUPlot} open
      xywh {25 450 350 170} box DOWN_BOX labeltype ENGRAVED_LABEL
    } {
      Fl_Button {} {
        label {[&3] Compute!}
        callback {char mydirnow[2500];
  printf( "Current Directory: %s \\n", getcwd( mydirnow, 2500 ) );
  
  if ( var_calc_rm_ocgnu->value( ) == 1 ) 
      system( " rm ocgnu.plt  " ); 

  void_plot_preview_plotfile(   "ocgnu.plt"   );
  redraw();


 
  if ( fexist( "editor.ocm"  ) == 1 ) 
  {
     // ncopy_conv( "macro.ocm" , "editor.ocm" );  // <-- copy, from editor to macro (standard) 
     
     // New feature ... quite beta !
     // ncpadvmac( "macro.ocm" , "editor.ocm" ); 
  }
     
  
  if ( checkbutton_xterm_console->value( ) == 1 ) 
     nsystem(  "  screen -d  -m   xterm -e   oc   macro.ocm " );
     
  else if ( checkbutton_single_console->value( ) == 1 ) 
     nsystem(  "  oc   macro.ocm " );
     
     
  
  // oc6 bug 
  // gnuplot ocgnu.plt  &}
        xywh {130 540 145 25}
      }
      Fl_Button {} {
        label {[&2] Edit!}
        callback {redraw();

 nsystem( "  screen -d -m fledit  macro.ocm " );

  // nsystem( "  screen -d -m fledit  editor.ocm " );}
        xywh {130 505 145 25}
      }
      Fl_Button {} {
        label {[&1] Create!}
        callback {redraw();

clear_plot();


create_macro( );


void_flfront_preview_browser1_refresh();}
        xywh {130 470 145 25}
      }
      Fl_Button {} {
        label {[&4] Plot!}
        callback {char mydirnow[2500];
  printf( "Current Directory: %s \\n", getcwd( mydirnow, 2500 ) );



  redraw();
  nsystem(  "  screen -d  -m  gnuplot ocgnu.plt  " );
  
  
  // oc6 bug 
  // gnuplot ocgnu.plt  &}
        xywh {130 575 145 25}
      }
    }
    Fl_Button {} {
      label {&Option}
      callback {win3->show();}
      xywh {600 650 80 30}
    }
    Fl_Group {} {
      label Preview open
      xywh {385 70 370 550} box DOWN_BOX labeltype ENGRAVED_LABEL resizable
    } {
      Fl_Browser flfront_preview_browser1 {
        xywh {395 80 350 505}
        code1 {flfront_preview_browser1->type( FL_HOLD_BROWSER );}
      }
      Fl_Button {} {
        label {Refresh Preview}
        callback {void_flfront_preview_browser1_refresh(  );}
        xywh {395 590 130 25}
      }
      Fl_Button {} {
        label Edit
        callback {redraw();

  nsystem( "  screen -d -m fledit  macro.ocm " );
// redraw();

// beta
// nsystem( "  screen -d -m fledit  editor.ocm " );}
        xywh {550 590 65 25}
      }
      Fl_Button {} {
        label {Close Plots}
        callback {redraw();

  
  nsystem( " pkill gnuplot " );}
        xywh {640 590 105 25}
      }
    }
    Fl_Button {} {
      label {&Database}
      callback {win2->show();}
      xywh {25 650 80 30}
    }
    Fl_Button {} {
      label {&Plot}
      callback {win4->show();}
      xywh {205 650 80 30}
    }
    Fl_Button {} {
      label {&Macro}
      callback {win5->show();}
      xywh {295 650 80 30}
    }
    Fl_Button {} {
      label {Conditio&n}
      callback {win6->show();}
      xywh {115 650 80 30}
    }
    Fl_Button {} {
      label {&Help}
      callback {if ( fexist( "/usr/bin/chromium" ) == 1) 
   nsystem(  " screen -d -m chromium  --new-window  http://github.com/lusamek/opencalphad " );
   
else if ( fexist( "/usr/bin/chromium-browser" ) == 1) 
   nsystem(  " screen -d -m chromium-browser   --new-window  http://github.com/lusamek/opencalphad " );
   
else
   nsystem(  " screen -d -m dillo http://github.com/lusamek/opencalphad " );}
      xywh {475 650 115 30} labelfont 1
    }
    Fl_Button {} {
      label {Period&ic}
      callback {nsystem( " screen -d -m gperiodic " );}
      xywh {385 650 80 30}
    }
  }
  Fl_Window win2 {
    label Database open
    xywh {1275 680 905 460} type Double resizable visible
  } {
    Fl_Box {} {
      label {FLTK OpenCalphad -- Database}
      xywh {15 10 880 35} box ENGRAVED_BOX labeltype ENGRAVED_LABEL
    }
    Fl_Button {} {
      label {&Close Frame}
      callback {win2->hide();}
      xywh {780 425 110 25}
    }
    Fl_Tabs {} {
      label {File browser} open
      xywh {15 70 875 345}
    } {
      Fl_Group {} {
        label {File browser} open
        xywh {35 95 850 315}
      } {
        Fl_File_Browser form_database_tab1_filebrowser1 {
          callback {printf( " Click 1\\n" );
 
if ( form_database_tab1_filebrowser1->value() >= 1 )
if ( fexist( form_database_tab1_filebrowser1->text( form_database_tab1_filebrowser1->value() ) ) == 2 ) 
{
  
   
    
}

else 
{
   printf( "File: %s\\n",   form_database_tab1_filebrowser1->text( form_database_tab1_filebrowser1->value() ) ); 
   form_database_tab1_currentfile->value(     form_database_tab1_filebrowser1->text( form_database_tab1_filebrowser1->value() )  );


  printf( "Click\\n" );



 input_var_tdb_database->value(  form_database_tab1_filebrowser1->text(   form_database_tab1_filebrowser1->value() ) ); 
 
  
  printf( "============================\\n" );
  printf( "   ELEMENT                  \\n" );
  printf( "============================\\n" );
  
  filegrep( input_var_tdb_database->value() , "ELEM" );

 redraw();
 
}


if ( form_database_tab1_filebrowser1->value() >= 1 )
{
   form_database_statusbar->value(   form_database_tab1_filebrowser1->text(   form_database_tab1_filebrowser1->value() )    ); 
}}
          xywh {35 110 845 195}
          code1 {form_database_tab1_filebrowser1->load( "." );}
          code2 {form_database_tab1_filebrowser1->type(FL_HOLD_BROWSER);}
        }
        Fl_Output form_database_tab1_currentfile {
          label {TDB Selection}
          xywh {340 315 540 25} color 49
        }
        Fl_Input form_database_tab1_filter {
          label Filter
          callback {printf( " Press Enter\\n" );
 

if ( strcmp( form_database_tab1_filter->value(  ) , "" ) == 0 ) 
{
      form_database_tab1_filebrowser1->filter(  0  ); 
      
 }
  else 
 {
         form_database_tab1_filebrowser1->filter(  form_database_tab1_filter->value(  )  );

 
 } 
  
  
   printf( " Path \\n" );
   char cwd[PATH_MAX];
   printf( "Path %s\\n" ,  getcwd( cwd, PATH_MAX ) );
   
   
   form_database_tab1_currentfile->value();
   
   form_database_tab1_filebrowser1->load( "." );}
          xywh {70 315 155 25} when 8
          code2 {form_database_tab1_filter->value( "*" );}
        }
        Fl_Button {} {
          label {TDB Content Preview }
          callback {system( " screen -d -m flpreview  ");}
          xywh {675 350 205 25}
        }
      }
      Fl_Group {} {
        label {Advanced browser} open
        xywh {30 95 860 320} hide
      } {
        Fl_Group {} {
          label Browser open
          xywh {30 130 390 220} box DOWN_BOX labeltype ENGRAVED_LABEL
        } {
          Fl_Browser browser1 {
            callback {if ( browser1->value() >= 1 )
{
   form_database_statusbar->value(   browser1->text(   browser1->value() )    ); 
}



 printf( "Click\\n" );
 input_var_tdb_database->value(    browser1->text(   browser1->value() )    ); 
 
  printf( "============================\\n" );
  printf( "   ELEMENT                  \\n" );
  printf( "============================\\n" );
  
  filegrep( input_var_tdb_database->value() , "ELEM" );


 redraw();}
            xywh {40 145 370 155} resizable
            code1 {browser1->type(FL_HOLD_BROWSER);}
          }
          Fl_Input input_notes {
            label Notes
            tooltip Demo xywh {90 310 165 25} color 55
          }
          Fl_Button {} {
            label {&Add}
            callback {browser1->add(   input_notes->value()  );

// if (  browser1->value() >= 1 )  printf( "%s\\n" ,   browser1->text(  browser1->value() )  )  ;}
            xywh {260 310 45 25}
          }
        }
        Fl_Group {} {
          label Database open
          xywh {430 230 450 120} box DOWN_BOX labeltype ENGRAVED_LABEL
        } {
          Fl_Button {} {
            label {&Edit}
            callback {redraw();
  
  char charo[PATH_MAX];
  strncpy( charo, "", PATH_MAX );
  strncat( charo , " screen -d -m  fledit  " , PATH_MAX - strlen( charo ) -1 );
  strncat( charo , " " , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , " \\"" , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , var_tdb_database , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , "\\" " , PATH_MAX -  strlen( charo ) -1 );
  nsystem(  charo );}
            xywh {540 310 50 25}
          }
          Fl_Button {} {
            label {ls tdb}
            callback {redraw();

  printf( "============================\\n" );
  printf( "   DATABASE                 \\n" );
  printf( "============================\\n" );
  
  nlsgrep( ".tdb" );
  nlsgrep( ".TDB" );}
            xywh {450 310 70 25}
          }
          Fl_Button {} {
            label {Elemen&t}
            callback {redraw();
  
  
  printf( "============================\\n" );
  printf( "   ELEMENT                  \\n" );
  printf( "============================\\n" );
  
  
  
  filegrep( var_tdb_database , "ELEM" );}
            xywh {650 250 75 25}
          }
          Fl_Button {} {
            label Browse
            callback {redraw();

  printf( "============================\\n" );
  printf( "   DATABASE                 \\n" );
  printf( "============================\\n" );
  
  nlsgrep( ".tdb" );
  nlsgrep( ".TDB" );
  
  
  printf( "============================\\n" );
  printf( "   DATABASE                 \\n" );
  printf( "============================\\n" );

  
        browser1->clear();
	DIR *dirp;
	struct dirent *dp;
	dirp = opendir( "." );
	while  ((dp = readdir( dirp )) != NULL ) 
	{
		if (  strcmp( dp->d_name, "." ) != 0 )
		if (  strcmp( dp->d_name, ".." ) != 0 )
                {
                    if ( ( strstr( dp->d_name, ".TDB" ) != 0 )  || ( strstr( dp->d_name, ".tdb" ) != 0 )  ) 
                    {
			printf( "%s\\n", dp->d_name );
 		        browser1->add(  dp->d_name  );
 		     }
                }
	}
	closedir( dirp );}
            xywh {450 250 70 25}
          }
          Fl_Button {} {
            label {&Species}
            callback {redraw();
  
  
  printf( "============================\\n" );
  printf( "   SPECIES                  \\n" );
  printf( "============================\\n" );
  
  
  
  filegrep( var_tdb_database , "SPECIE" );}
            xywh {650 280 75 25}
          }
          Fl_Button {} {
            label Path
            callback {redraw();

  printf( "============================\\n" );
  printf( "   PATH                     \\n" );
  printf( "============================\\n" );
  
    char mydirnow[2500];
  printf( "Current Directory: %s \\n", getcwd( mydirnow, 2500 ) );}
            xywh {450 280 70 25}
          }
          Fl_Button {} {
            label {&View}
            callback {redraw();
  
  char charo[PATH_MAX];
  strncpy( charo, "", PATH_MAX );
  strncat( charo , " screen -d -m  flview   " , PATH_MAX - strlen( charo ) -1 );
  strncat( charo , " " , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , " \\"" , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , var_tdb_database , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , "\\" " , PATH_MAX -  strlen( charo ) -1 );
  nsystem(  charo );}
            xywh {540 280 50 25}
          }
          Fl_Button {} {
            label {&Phase}
            callback {redraw();
  
  
  printf( "============================\\n" );
  printf( "   PHASE                   \\n" );
  printf( "============================\\n" );
  
  
  
  filegrep( var_tdb_database , "PHASE " );}
            xywh {730 250 75 25}
          }
          Fl_Button {} {
            label {&Fun}
            callback {redraw();
  
  
  printf( "============================\\n" );
  printf( "   FUN                   \\n" );
  printf( "============================\\n" );
  
  
  
  filegrep( var_tdb_database , "FUN " );}
            xywh {730 280 75 25}
          }
          Fl_Button {} {
            label {&Function}
            callback {redraw();
  
  
  printf( "============================\\n" );
  printf( "   FUNCTION                  \\n" );
  printf( "============================\\n" );
  
  
  
  filegrep( var_tdb_database , "FUNCTION " );}
            xywh {650 310 75 25}
          }
          Fl_Button {} {
            label {&Cat}
            callback {redraw();
  ncat( var_tdb_database );}
            xywh {540 250 50 25}
          }
        }
        Fl_Group {} {
          label Create open
          xywh {430 130 450 80} box DOWN_BOX labeltype ENGRAVED_LABEL
        } {
          Fl_Button {} {
            label {Fetch!}
            callback {redraw();
  
  char charo[PATH_MAX];
  strncpy( charo, "", PATH_MAX );
  strncat( charo , " xterm -e wget  -c     " , PATH_MAX - strlen( charo ) -1 );
  strncat( charo , " " , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , " \\"" , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , form_database_fetch_url->value() , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , "\\" " , PATH_MAX -  strlen( charo ) -1 );
  nsystem(  charo );
 

redraw();

  printf( "============================\\n" );
  printf( "   DATABASE                 \\n" );
  printf( "============================\\n" );
  
  nlsgrep( ".tdb" );
  nlsgrep( ".TDB" );
  
  
  printf( "============================\\n" );
  printf( "   DATABASE                 \\n" );
  printf( "============================\\n" );

  
        browser1->clear();
	DIR *dirp;
	struct dirent *dp;
	dirp = opendir( "." );
	while  ((dp = readdir( dirp )) != NULL ) 
	{
		if (  strcmp( dp->d_name, "." ) != 0 )
		if (  strcmp( dp->d_name, ".." ) != 0 )
                {
                    if ( ( strstr( dp->d_name, ".TDB" ) != 0 )  || ( strstr( dp->d_name, ".tdb" ) != 0 )  ) 
                    {
			printf( "%s\\n", dp->d_name );
 		        browser1->add(  dp->d_name  );
 		     }
                }
	}
	closedir( dirp );}
            xywh {445 140 75 25}
          }
          Fl_Button {} {
            label dos2unix
            callback {redraw();
  
  char charo[PATH_MAX];
  strncpy( charo, "", PATH_MAX );
  strncat( charo , " xterm -e dos2unix    " , PATH_MAX - strlen( charo ) -1 );
  strncat( charo , " " , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , " \\"" , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , var_tdb_database , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , "\\" " , PATH_MAX -  strlen( charo ) -1 );
  nsystem(  charo );}
            xywh {445 175 75 25}
          }
          Fl_Input form_database_fetch_url {
            label Url
            xywh {555 140 315 25}
          }
          Fl_Button {} {
            label {&Edit}
            callback {redraw();
  
  char charo[PATH_MAX];
  strncpy( charo, "", PATH_MAX );
  strncat( charo , " screen -d -m  fledit  " , PATH_MAX - strlen( charo ) -1 );
  strncat( charo , " " , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , " \\"" , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , var_tdb_database , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , "\\" " , PATH_MAX -  strlen( charo ) -1 );
  nsystem(  charo );}
            xywh {533 175 80 25}
          }
        }
      }
      Fl_Group {} {
        label SGTE open
        xywh {40 95 850 320} hide
      } {
        Fl_Button {} {
          label {Open SGTE Website for Selected Elements (Phasediagram) for elements in main panel}
          callback {char str[PATH_MAX];
      strncpy( str, output_system->value(), PATH_MAX ); 
      int foocplt = 0;
      
      char ptr[strlen(str)+1];
      int i,j=0;
      for(i=0; str[i]!='\\0'; i++)
      {
        if ( str[i] == ' ' )
        {
          if ( foocplt == 0 ) 
          {
             ptr[j++]='-';   
             foocplt = 1 ; 
          }
        }
        else if (str[i] != '\\n' && str[i] != '\\n') 
          ptr[j++]=str[i];
      } 
      ptr[j]='\\0';

 

  char foostr[PATH_MAX];
  
   
  if ( fexist( "/usr/bin/dillo" ) == 1 ) 
     snprintf( foostr , sizeof( foostr ), "%s%s.jpg' " ,  "    screen -d -m  /usr/bin/dillo  'https://www.crct.polymtl.ca/fact/documentation/SGTE2017/" , ptr );  // ptr
  
  
  // ssl https... 
  else if ( fexist( "/usr/bin/chromium" ) == 1 ) 
      snprintf( foostr , sizeof( foostr ), "%s%s.jpg' " ,  "    screen -d -m  /usr/bin/chromium  'https://www.crct.polymtl.ca/fact/documentation/SGTE2017/" , ptr );  // ptr

  else if ( fexist( "/usr/bin/chromium-browser" ) == 1 ) 
      snprintf( foostr , sizeof( foostr ), "%s%s.jpg' " ,  "    screen -d -m  /usr/bin/chromium-browser  'https://www.crct.polymtl.ca/fact/documentation/SGTE2017/" , ptr );  // ptr

  
  else if ( fexist( "/usr/bin/firefox" ) == 1 ) 
      snprintf( foostr , sizeof( foostr ), "%s%s.jpg' " ,  "    screen -d -m  /usr/bin/firefox  'https://www.crct.polymtl.ca/fact/documentation/SGTE2017/" , ptr );  // ptr


  else 
      snprintf( foostr , sizeof( foostr ), "%s%s.jpg' " ,  "    screen -d -m  dillo  'https://www.crct.polymtl.ca/fact/documentation/SGTE2017/" , ptr );  // ptr
  
  printf( "CMD %s\\n", foostr ); 
  system( foostr ) ;
  
  
  
   
   
// https://www.crct.polymtl.ca/fact/documentation/SGTE2017/Al-Si.jpg
// var_input_floc_elements->value( "" );}
          xywh {65 140 770 35} labelfont 1 labelsize 12
        }
      }
    }
    Fl_Output form_database_statusbar {
      xywh {15 425 755 25} color 49
    }
  }
  Fl_Window win3 {
    label Option open
    xywh {46 216 580 470} type Double resizable visible
  } {
    Fl_Box {} {
      label {FLTK OpenCalphad -- Option}
      xywh {15 15 550 40} box ENGRAVED_BOX labeltype ENGRAVED_LABEL
    }
    Fl_Button {} {
      label {&Close Frame}
      callback {win3->hide();}
      xywh {450 430 115 30}
    }
    Fl_Tabs {} {open
      xywh {15 75 550 340}
    } {
      Fl_Group {} {
        label {&Applications} open selected
        xywh {40 100 525 315}
      } {
        Fl_Group {} {
          label {User device and hardware} open
          xywh {60 130 435 260} box DOWN_BOX labeltype ENGRAVED_LABEL
        } {
          Fl_Button {} {
            label {&Keyboard}
            callback {nsystem( " cd ;  screen -d -m flkeyboard " );}
            image {../../../../nuvola/32x32/apps/keyboard_layout.png} xywh {195 165 75 55}
          }
          Fl_Button {} {
            label {M&onitor}
            callback {nsystem( " cd ; screen -d -m flmonitor " );}
            image {../../../../nuvola/32x32/devices/tv.png} xywh {110 165 80 55}
          }
          Fl_Button {} {
            label Sound
            callback {nsystem( " cd ;  screen -d -m flsound  " );}
            image {../../../../nuvola/32x32/apps/amarok.png} xywh {275 165 80 55}
          }
          Fl_Button {} {
            label Printer
            callback {nsystem( " cd ; screen -d -m flprinter  " );}
            image {../../../../nuvola/32x32/devices/printer.png} xywh {360 165 75 55}
          }
          Fl_Button {} {
            label Fileman
            callback {nsystem( " cd ; screen -d -m thunar " );}
            image {../../../../nuvola/32x32/apps/kcmdevice.png} xywh {110 235 80 55}
          }
          Fl_Button {} {
            label Terminal
            callback {nsystem( " cd ; screen -d -m xterm " );}
            image {../../../../nuvola/32x32/apps/konsole.png} xywh {195 235 75 55}
          }
          Fl_Button {} {
            label Web
            callback {nsystem( " cd ;  screen -d -m chromium duckduckgo.com  " );}
            image {../../../../nuvola/32x32/apps/netscape.png} xywh {275 235 80 55}
          }
          Fl_Button {} {
            label Notepad
            callback {nsystem( " cd ; screen -d -m flnotepad ~/notes.txt " );}
            image {../../../../nuvola/32x32/apps/kate.png} xywh {360 235 75 55}
          }
          Fl_Button {} {
            label {Rox Filer}
            callback {nsystem( "   rox " );}
            image {../../../../nuvola/32x32/apps/kcmdevice.png} xywh {110 305 80 55}
          }
          Fl_Button {} {
            label FLM
            callback {nsystem( " screen -d -m flm " );}
            image {../../../../nuvola/32x32/apps/mycomputer.png} xywh {195 305 75 55}
          }
          Fl_Button {} {
            label Paint
            callback {// nsystem( " screen -d -m xpaint   " );


     system( "   screen -d -m  xpaint   -canvas -size 800x600    " );}
            image {../../../../nuvola/32x32/apps/ooo_gulls.png} xywh {275 305 80 55}
          }
          Fl_Button {} {
            label Gftp
            callback {system( "   screen -d -m   gftp      " );}
            image {../../../../nuvola/32x32/apps/package_network.png} xywh {360 305 75 55}
          }
        }
      }
      Fl_Group {} {
        label {&Repository} open
        xywh {40 100 525 315} hide
      } {
        Fl_Group {} {
          label {Online Repository OC Calphad} open
          xywh {100 140 375 220} box DOWN_BOX labeltype ENGRAVED_LABEL
        } {
          Fl_Button {} {
            label {&Fetch online ~/macros directory}
            callback {system( " cd ; rm macros.zip ;   xterm -e ' wget -c --no-check-certificate   https://raw.githubusercontent.com/lusamek/OpenCalphad/master/macros.zip -O   ~/macros.zip ; cd ; unzip -o macros.zip ' " );
  
  
  

  
  system( "  cd ; xterm -e '  cd ;   mkdir ~/macros/ ;  wget -c   --no-check-certificate  https://codeload.github.com/lusamek/OpenCalphad/zip/refs/heads/master -O oc.zip ;  unzip -o oc.zip ; cd ;  cp -v  OpenCalphad-master/macros/* macros/  ' ");
  
  
  
  system( " cd ;   sleep 1 ; mkdir ~/macros/  ;  wget   -c   --no-check-certificate   https://raw.githubusercontent.com/lusamek/OpenCalphad/master/macros/iron4.tdb -O  ~/macros/iron4.tdb ");  
  
  
  
  
  system( "  cd ; sync ; sleep 1 ; screen -d -m  flopencalphad ~/macros  " );}
            xywh {120 165 340 30}
          }
          Fl_Button {} {
            label {&Fetch online source code OC Gui}
            callback {// system( " screen -d -m xterm -e ' wget -c --no-check-certificate   https://raw.githubusercontent.com/lusamek/OpenCalphad/master/macros.zip -O   ~/macros.zip ; cd ; unzip macros.zip ;  flopencalphad ~/macros ' " );



 system( " cd ;  screen -d -m xterm -e ' wget -c --no-check-certificate https://codeload.github.com/lusamek/OpenCalphad/zip/master  -O  OpenCalphad.zip ' ")}
            xywh {120 210 340 30}
          }
          Fl_Button {} {
            label {&Help}
            callback {if ( fexist( "/usr/bin/chromium" ) == 1) 
   nsystem(  " screen -d -m chromium  --new-window  http://github.com/lusamek/opencalphad " );
   
else if ( fexist( "/usr/bin/chromium-browser" ) == 1) 
   nsystem(  " screen -d -m chromium-browser   --new-window  http://github.com/lusamek/opencalphad " );
   
else
   nsystem(  " screen -d -m dillo http://github.com/lusamek/opencalphad " );}
            xywh {120 255 340 30} labelfont 1
          }
          Fl_Button {} {
            label {Manual OpenCalphad (PDF)}
            callback {system( "  mconfig --webbrowser  'https://github.com/lusamek/OpenCalphad/blob/master/Manual-Introduction-OC6.pdf'  " );}
            xywh {120 300 340 30} labelfont 1
          }
        }
      }
      Fl_Group {} {
        label {&Metal Sc. Utils} open
        xywh {40 100 525 315} hide
      } {
        Fl_Group {} {
          label {Metal Sciences} open
          xywh {40 135 500 230} box DOWN_BOX labeltype ENGRAVED_LABEL
        } {
          Fl_Button {} {
            label {Mixture Law}
            callback {nsystem(  " screen -d -m  flmechprop    " );}
            xywh {215 145 150 40}
          }
          Fl_Button {} {
            label {Bulk Diffusion}
            callback {nsystem(  " screen -d -m  fldiffusion  diffusion.dat    " );}
            xywh {375 145 150 40}
          }
          Fl_Button {} {
            label {&Fx Grapher}
            callback {nsystem(  " screen -d -m  fxgrapher  " );}
            xywh {55 145 150 40}
          }
          Fl_Button {} {
            label FLOCCALC
            callback {nsystem(  " cd ; screen -d -m  floccalc   " );}
            xywh {55 195 150 40}
          }
        }
      }
      Fl_Group {} {
        label {&User Help} open
        xywh {40 100 525 315} hide
      } {
        Fl_Button {} {
          label {OpenCalphad User Support}
          callback {if ( fexist( "/usr/bin/chromium" ) == 1) 
   nsystem(  " screen -d -m chromium  --new-window  https://webchat.freenode.net/?channels=\#opencalphad " );
   
else if ( fexist( "/usr/bin/chromium-browser" ) == 1) 
   nsystem(  " screen -d -m chromium-browser   --new-window  https://webchat.freenode.net/?channels=\#opencalphad  " );}
          xywh {140 135 300 55} labelfont 1
        }
        Fl_Button {} {
          label {Tutorial OC Webpage}
          callback {if ( fexist( "/usr/bin/chromium" ) == 1) 
   nsystem(  " screen -d -m chromium  --new-window  http://github.com/lusamek/opencalphad " );
   
else if ( fexist( "/usr/bin/chromium-browser" ) == 1) 
   nsystem(  " screen -d -m chromium-browser   --new-window  http://github.com/lusamek/opencalphad " );
   
else
   nsystem(  " screen -d -m dillo http://github.com/lusamek/opencalphad " );}
          xywh {140 210 300 55} labelfont 1
        }
      }
      Fl_Group {} {
        label {&Apps} open
        xywh {40 100 525 315} hide
      } {
        Fl_Group {} {
          label {User system call} open
          xywh {90 140 400 90} box DOWN_BOX labeltype ENGRAVED_LABEL
        } {
          Fl_Button {} {
            label {&ls}
            callback {nls();}
            xywh {100 150 55 25}
          }
          Fl_Button {} {
            label {&xterm}
            callback {nsystem( " screen -d -m xterm " );}
            xywh {160 150 50 25}
          }
          Fl_Button {} {
            label {&notepad}
            callback {nsystem( " screen -d -m flnotepad " );}
            xywh {360 185 65 25}
          }
          Fl_Button {} {
            label {&xpaint}
            callback {// nsystem( " screen -d -m xpaint  " );


 nsystem( "   screen -d -m  xpaint   -canvas -size 640x480    " );}
            xywh {360 150 65 25}
          }
          Fl_Button {} {
            label Path
            callback {redraw();

  printf( "============================\\n" );
  printf( "   PATH                     \\n" );
  printf( "============================\\n" );
  
    char mydirnow[2500];
  printf( "Current Directory: %s \\n", getcwd( mydirnow, 2500 ) );}
            xywh {100 185 55 25}
          }
          Fl_Button {} {
            label rox
            callback {nsystem( " rox " );}
            xywh {160 185 50 25}
          }
          Fl_Button {} {
            label x48
            callback {nsystem( " screen -d -m x48 " );}
            xywh {430 185 50 25}
          }
          Fl_Button {} {
            label {&xlock}
            callback {nsystem( "  cd ; screen -d -m   xlock  -nolock  " );}
            xywh {430 150 50 25}
          }
          Fl_Button {} {
            label Screenshot
            callback {nsystem( " cd ;  screen -d -m flscreenshot " );}
            xywh {270 185 85 25}
          }
          Fl_Button {} {
            label Monitor
            callback {nsystem( " screen -d -m flmonitor " );}
            xywh {270 150 85 25}
          }
          Fl_Button {} {
            label CAS
            callback {nsystem( " screen -d -m xterm -e mathomatic   " );}
            xywh {215 185 50 25}
          }
          Fl_Button {} {
            label calc
            callback {nsystem( " screen -d -m flcalc    " );}
            xywh {215 150 50 25}
          }
        }
        Fl_Group {} {
          label {Linux/BSD Software} open
          xywh {90 280 400 90} box DOWN_BOX labeltype ENGRAVED_LABEL
        } {
          Fl_Button {} {
            label {&Web Browser}
            callback {if ( fexist( "/usr/bin/dillo" ) == 1) 
   nsystem(  " screen -d -m dillo  http://duckduckgo.com   " );

else if ( fexist( "/usr/bin/chromium" ) == 1) 
   nsystem(  " screen -d -m chromium  --new-window  http://duckduckgo.com " );
   
else if ( fexist( "/usr/bin/chromium-browser" ) == 1) 
   nsystem(  " screen -d -m chromium-browser   --new-window  http://duckduckgo.com   " );
   
else if ( fexist( "/usr/bin/firefox" ) == 1) 
   nsystem(  " screen -d -m firefox  --new-window  http://duckduckgo.com " );
   
else if ( fexist( "/usr/bin/chromium-browser" ) == 1) 
   nsystem(  " screen -d -m chromium-browser   --new-window  http://duckduckgo.com   " );
   
else
   nsystem(  " screen -d -m dillo http://duckduckgo.com    " );}
            xywh {100 295 380 30}
          }
          Fl_Button {} {
            label {&Webpage Debian}
            callback {nsystem(  " screen -d -m chromium  --new-window  http://debian.org " );}
            xywh {100 330 380 30}
          }
        }
      }
      Fl_Group {} {
        label Settings open
        xywh {40 100 525 315} hide
      } {
        Fl_Button {} {
          label {&Advanced Development Settings}
          callback {win7->show();}
          xywh {50 115 375 60}
        }
        Fl_Group {} {
          label {Console output} open
          xywh {50 245 375 95} box DOWN_BOX labeltype ENGRAVED_LABEL
        } {
          Fl_Check_Button checkbutton_single_console {
            label {Single console output }
            xywh {70 300 25 25} down_box DOWN_BOX
          }
          Fl_Check_Button checkbutton_xterm_console {
            label {xterm console output + screen (background)}
            xywh {70 260 25 25} down_box DOWN_BOX
            code2 {checkbutton_xterm_console->value( 1 );}
          }
        }
      }
    }
  }
  Fl_Window win4 {
    label {FLOPENCALPHAD - PLOT} open
    xywh {1482 506 910 600} type Double resizable visible
  } {
    Fl_Box {} {
      label {FLTK OpenCalphad -- Plot}
      xywh {10 25 885 35} box ENGRAVED_BOX labeltype ENGRAVED_LABEL
    }
    Fl_Button {} {
      label {Close Frame}
      callback {win4->hide();}
      xywh {735 560 160 30}
    }
    Fl_Output form_plot_statusline {
      xywh {10 560 715 30} color 49
      code1 {form_plot_statusline->value("ocgnu.plt");}
    }
    Fl_Button {} {
      label {Close all &plots}
      callback {nsystem( " pkill gnuplot " );}
      xywh {285 485 135 30}
    }
    Fl_Button {} {
      label {Clear GnuPlot plt}
      callback {/// this might be modified for windows/mac ...
nsystem( "  rm  ocgnu.plt " );
nsystem( "  rm  advocgnu.plt " );
nsystem( "  rm  macro2.ocm " );

flplot_preview_browser->clear();}
      xywh {150 485 130 30}
    }
    Fl_Button {} {
      label {Refresh Preview}
      callback {form_plot_statusline->value("ocgnu.plt");
  void_plot_preview_plotfile(  "ocgnu.plt" );}
      xywh {15 485 130 30}
    }
    Fl_Browser flplot_preview_browser {
      xywh {10 290 885 180} resizable
      code1 {flplot_preview_browser->type( FL_HOLD_BROWSER );}
    }
    Fl_Button {} {
      label {Automatic Term Driver}
      callback {plot_gnuplot_term_driver_force->value( 0 );}
      xywh {445 485 190 30}
    }
    Fl_Input plot_gnuplot_term_drivername {
      label {Term Driver}
      xywh {730 485 110 25}
      code2 {plot_gnuplot_term_drivername->value( "x11" );}
    }
    Fl_Check_Button plot_gnuplot_term_driver_force {
      label {Active Driver}
      xywh {730 510 25 25} down_box DOWN_BOX
    }
    Fl_Button {} {
      label {&?}
      callback {printf("Util: Create help.txt !\\n");

      FILE *fpout;

      fpout = fopen( "help.txt", "wb" );
      
      fputs( "===============\\n", fpout );
      fputs( "GNUPLOT DRIVER \\n", fpout );
      fputs( "===============\\n", fpout );
      fputs( "cairolatex        canvas            cgm               context \\n", fpout );
      fputs( "corel             dumb              dxf               eepic\\n", fpout );
      fputs( "emf               emtex             epscairo          epslate\\n", fpout );
      fputs( "fig               gif               hpgl              jpeg\\n", fpout );
      fputs( "latex             lua               mf                mp\\n", fpout );
      fputs( "pcl5              pdfcairo          png               pngcair\\n", fpout );
      fputs( "pop               postscript        pslatex           pstex\\n", fpout );
      fputs( "pstricks          push              qms               svg\\n", fpout );
      fputs( "tek40xx           tek410x           texdraw           tgif\\n", fpout );
      fputs( "tikz              tkcanvas          tpic              vttek\\n", fpout );
      fputs( "wxt               x11               xlib              xterm\\n", fpout );
      fclose( fpout );
      
      
      nsystem( " screen -d -m flview help.txt " );}
      xywh {845 485 30 25}
    }
    Fl_Tabs {} {open
      xywh {10 75 885 205}
    } {
      Fl_Group {} {
        label {Single Plot} open
        xywh {45 106 850 168}
      } {
        Fl_Button {} {
          label {4.) View Plot File}
          callback {redraw();
  
  char charo[PATH_MAX];
  strncpy( charo, "", PATH_MAX );
  strncat( charo , " screen -d -m  flview   " , PATH_MAX - strlen( charo ) -1 );
  strncat( charo , " " , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , " \\"" , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , "ocgnu.plt"   , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , "\\" " , PATH_MAX -  strlen( charo ) -1 );
  nsystem(  charo );}
          xywh {485 155 130 25}
        }
        Fl_Button {} {
          label {3.) Edit Plot File}
          callback {redraw();
  
  char charo[PATH_MAX];
  strncpy( charo, "", PATH_MAX );
  strncat( charo , " screen -d -m  fledit   " , PATH_MAX - strlen( charo ) -1 );
  strncat( charo , " " , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , " \\"" , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , "ocgnu.plt"   , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , "\\" " , PATH_MAX -  strlen( charo ) -1 );
  nsystem(  charo );}
          xywh {345 155 130 25}
        }
        Fl_Button {} {
          label {5.) Plot!}
          callback {char mydirnow[2500];
  printf( "Current Directory: %s \\n", getcwd( mydirnow, 2500 ) );
  
  redraw();

  
  if ( plot_gnuplot_term_driver_force->value( ) == 0 )  
  {
      ncp( "advocgnu.plt" , "ocgnu.plt" );
      form_plot_statusline->value("ocgnu.plt");
      void_plot_preview_plotfile(  "ocgnu.plt" );
      nsystem(  "  screen -d  -m  gnuplot ocgnu.plt     " );
  }   
  
  else if ( plot_gnuplot_term_driver_force->value( ) == 1 )
  { 
      ncp(           "advocgnu.plt" , "ocgnu.plt" );
      ncopysetterm(  "advocgnu.plt" ,  "ocgnu.plt" ,  plot_gnuplot_term_drivername->value()   );
      form_plot_statusline->value( "advocgnu.plt" );
      void_plot_preview_plotfile(  "advocgnu.plt" );
      nsystem(  "  screen -d  -m  gnuplot advocgnu.plt  " );
  }  
     
  // oc6 bug 
  // gnuplot ocgnu.plt  &}
          xywh {625 155 135 25} labelfont 1
        }
        Fl_Button {} {
          label {2.) Compute}
          callback {nsystem( "  rm  ocgnu.plt " );
  nsystem( "  rm  advocgnu.plt " );

  char mydirnow[2500];
  printf( "Current Directory: %s \\n", getcwd( mydirnow, 2500 ) );
  redraw();
  
  form_plot_statusline->value( "Compute ocgnu.plt in progress..." );
  flplot_preview_browser->clear();
  
  if ( checkbutton_xterm_console->value( ) == 1 ) 
     nsystem(  "  screen -d  -m   xterm -e   oc   macro.ocm " );
     
  else if ( checkbutton_single_console->value( ) == 1 ) 
     nsystem(  "  oc   macro.ocm " );
     
  // oc6 bug 
  // gnuplot ocgnu.plt  &}
          xywh {205 155 130 25}
        }
        Fl_Button {} {
          label {1.) Edit macro}
          callback {redraw();

  nsystem( "  screen -d -m fledit  macro.ocm " );
// redraw();

// beta
// nsystem( "  screen -d -m fledit  editor.ocm " );}
          xywh {65 155 130 25}
        }
      }
      Fl_Group {} {
        label {Rescale Plot} open
        xywh {30 100 865 180} hide
      } {
        Fl_Button {} {
          label {1. Dup. Adv. Macro}
          callback {redraw();
  ncp( "advmacro.ocm" , "macro.ocm" );}
          xywh {50 115 145 25}
        }
        Fl_Check_Button plot_adv_computer_skipint {
          label {Skip Keypress}
          callback {plot_adv_computer_skipint_int = plot_adv_computer_skipint->value();

printf( "%d\\n", plot_adv_computer_skipint->value() );
printf( "%d\\n", plot_adv_computer_skipint_int );}
          xywh {80 245 25 25} down_box DOWN_BOX
        }
        Fl_Input var_x_advplot_str {
          label {Scale X-axis }
          xywh {165 155 275 25}
          code1 {var_x_advplot_str->value( "set xrange [0 : 2]" );}
        }
        Fl_Input var_y_advplot_str {
          label {Scale Y-axis }
          xywh {165 180 275 25}
          code1 {var_y_advplot_str->value( "set yrange [600 : 1600]" );}
        }
        Fl_Check_Button var_button_y_advplot_str_automatic {
          label {Set both X and Y}
          xywh {80 215 155 25} down_box DOWN_BOX
          code1 {var_button_y_advplot_str_automatic->value( 1 );}
        }
        Fl_Button {} {
          label {2. Copy/Set Plot}
          callback {redraw();
  
  ncp_advfix( "advocgnu.plt" , "ocgnu.plt",   var_x_advplot_str->value( ),   var_y_advplot_str->value( )  ,   var_button_y_advplot_str_automatic->value(  )  );  
  
  
  void_plot_preview_plotfile(  "advocgnu.plt" );
  
  //  nsystem( "  rm  ocgnu.plt " );
  //  nsystem( "  rm  advocgnu.plt " );
  
  // set xrange [0.5 : 0.7]
  
  // var_x_advplot_str->value( "set xrange [0 : 2]" );}
          xywh {205 115 145 25}
        }
        Fl_Button {} {
          label {4. Adv.Plot (Gnuplot)}
          callback {char mydirnow[2500];
  printf( "Current Directory: %s \\n", getcwd( mydirnow, 2500 ) );
  

      nsystem(  "  screen -d  -m  gnuplot advocgnu.plt  " );}
          xywh {570 115 195 25} labelfont 1
        }
        Fl_Button {} {
          label {3. Edit Adv.Plot (Gnuplot)}
          callback {redraw();

 
  
  char charo[PATH_MAX];
  strncpy( charo, "", PATH_MAX );
  strncat( charo , " screen -d -m  fledit   " , PATH_MAX - strlen( charo ) -1 );
  strncat( charo , " " , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , " \\"" , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , "advocgnu.plt"   , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , "\\" " , PATH_MAX -  strlen( charo ) -1 );
  nsystem(  charo );
  
///   nsystem(  "  screen -d  -m  gnuplot advocgnu.plt  " );}
          xywh {360 115 200 25}
        }
      }
      Fl_Group {} {
        label {Misc.} open
        xywh {20 100 875 180} hide
      } {
        Fl_Button {} {
          label {Edit Adv. Plot}
          callback {redraw();
  
  char charo[PATH_MAX];
  strncpy( charo, "", PATH_MAX );
  strncat( charo , " screen -d -m  fledit   " , PATH_MAX - strlen( charo ) -1 );
  strncat( charo , " " , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , " \\"" , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , "advocgnu.plt"   , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , "\\" " , PATH_MAX -  strlen( charo ) -1 );
  nsystem(  charo );}
          xywh {50 180 130 25}
        }
        Fl_Button {} {
          label {Adv. Compute}
          callback {char mydirnow[2500];
  printf( "Current Directory: %s \\n", getcwd( mydirnow, 2500 ) );

  redraw();
  ncpadvmac( "macro2.ocm" , "advmacro.ocm" );
  
  form_plot_statusline->value( "Compute advocgnu.plt in progress..." );
  flplot_preview_browser->clear();
  //void_plot_preview_plotfile(  "advocgnu.plt" );
  
  nsystem( "  rm  ocgnu.plt " );
  nsystem( "  rm  advocgnu.plt " );
  
  if ( checkbutton_xterm_console->value( ) == 1 ) 
     nsystem(  "  screen -d  -m   xterm -e   oc   macro2.ocm " );
     
  else if ( checkbutton_single_console->value( ) == 1 ) 
     nsystem(  "  oc   macro2.ocm " );
     
  // oc6 bug 
  // gnuplot ocgnu.plt  &}
          xywh {185 125 130 25}
        }
        Fl_Button {} {
          label {Edit Adv. Macro}
          callback {redraw();


  form_plot_statusline->value( "Edit advmacro.ocm in progress..." );
  
  char charo[PATH_MAX];
  strncpy( charo, "", PATH_MAX );
  strncat( charo , " screen -d -m  fledit   " , PATH_MAX - strlen( charo ) -1 );
  strncat( charo , " " , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , " \\"" , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , "advmacro.ocm"   , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , "\\" " , PATH_MAX -  strlen( charo ) -1 );
  nsystem(  charo );}
          xywh {50 125 130 25}
        }
        Fl_Button {} {
          label {View Res. Macro.}
          callback {redraw();
  ncpadvmac( "macro2.ocm" , "advmacro.ocm" );

  ncat( "macro2.ocm" );

  form_plot_statusline->value( "View macro2.ocm in progress..." );
  
  char charo[PATH_MAX];
  strncpy( charo, "", PATH_MAX );
  strncat( charo , " screen -d -m  flview    " , PATH_MAX - strlen( charo ) -1 );
  strncat( charo , " " , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , " \\"" , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , "macro2.ocm"   , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , "\\" " , PATH_MAX -  strlen( charo ) -1 );
  nsystem(  charo );}
          xywh {320 125 130 25}
        }
        Fl_Button {} {
          label {Single Adv. Plot !}
          callback {char mydirnow[2500];
  printf( "Current Directory: %s \\n", getcwd( mydirnow, 2500 ) );
  
  redraw();
  
 
      //ncp(           "advocgnu.plt" , "ocgnu.plt" );
      //ncopysetterm(  "advocgnu.plt" ,  "ocgnu.plt" ,  plot_gnuplot_term_drivername->value()   );
      // form_plot_statusline->value( "Plot of advocgnu.plt in progress..." );
      //void_plot_preview_plotfile(  "advocgnu.plt" );
      
      nsystem(  "  screen -d  -m  gnuplot advocgnu.plt  " );}
          xywh {320 180 130 25}
        }
        Fl_Button {} {
          label Preview
          callback {char mydirnow[2500];
  printf( "Current Directory: %s \\n", getcwd( mydirnow, 2500 ) );
  
  redraw();
  
   
        
      //form_plot_statusline->value( "Plot of advocgnu.plt in progress..." );
      void_plot_preview_plotfile(  "advocgnu.plt" );
      
      //ncp_advfix( "advocgnu.plt" , "ocgnu.plt" );  
      //nsystem(  "  screen -d  -m  gnuplot advocgnu.plt  " );}
          xywh {185 180 130 25}
        }
      }
    }
  }
  Fl_Window win5 {
    label Macro open
    xywh {137 506 885 555} type Double resizable visible
  } {
    Fl_Box {} {
      label {FLTK OpenCalphad -- Macro}
      xywh {5 5 875 35} box ENGRAVED_BOX labeltype ENGRAVED_LABEL
    }
    Fl_Button {} {
      label {&Close Frame}
      callback {win5->hide();}
      xywh {750 520 115 25}
    }
    Fl_Tabs {} {open
      xywh {15 60 850 440}
    } {
      Fl_Group {} {
        label {File Selection} open
        xywh {25 85 840 415} hide
      } {
        Fl_Group {} {
          label Browser open
          xywh {30 245 370 240} box DOWN_BOX labeltype ENGRAVED_LABEL
        } {
          Fl_Browser browser2 {
            callback {printf( "Click\\n" );


 input_var_macro_filename->value(  browser2->text(   browser2->value() ) ); 


 if ( browser2->value() >= 1 ) 
 {
  form_macro_statusbar->value(  browser2->text( browser2->value() ) );
 }
 

  
  int fetchi;
  FILE *fp5;
  FILE *fp6;
  char fetchline[PATH_MAX];
  char fetchlinetmp[PATH_MAX];
  char filein[PATH_MAX];
  strncpy( filein,   input_var_macro_filename->value(), PATH_MAX );
  
  
    browser_macro_filecontent->clear();
    
    fp6 = fopen( filein , "rb");
    while( !feof(fp6) ) 
    {
          fgets(fetchlinetmp, PATH_MAX, fp6); 
          strncpy( fetchline, "" , PATH_MAX );
          for( fetchi = 0 ; ( fetchi <= strlen( fetchlinetmp ) ); fetchi++ )
            if ( fetchlinetmp[ fetchi ] != '\\n' )
                 fetchline[fetchi]=fetchlinetmp[fetchi];
                 
                if ( !feof( fp6 ) ) 
                {
                    browser_macro_filecontent->add( fetchline );    
                }

     }
     fclose( fp6 );

  
 
 redraw();}
            xywh {50 285 330 195}
            code1 {browser2->type(FL_HOLD_BROWSER);}
          }
          Fl_Input input_var_macro_filename {
            label Filename
            xywh {115 255 265 25}
          }
        }
        Fl_Group {} {
          label Macro open
          xywh {30 125 370 95} box DOWN_BOX labeltype ENGRAVED_LABEL
        } {
          Fl_Button {} {
            label {&Browse}
            callback {redraw();

  printf( "============================\\n" );
  printf( "   MACRO                    \\n" );
  printf( "============================\\n" );
  
  nlsgrep( ".ocm" );
  nlsgrep( ".OCM" );
   
      
        browser2->clear();
	DIR *dirp;
	struct dirent *dp;
	dirp = opendir( "." );
	while  ((dp = readdir( dirp )) != NULL ) 
	{
		if (  strcmp( dp->d_name, "." ) != 0 )
		if (  strcmp( dp->d_name, ".." ) != 0 )
                {
                    if ( ( strstr( dp->d_name, ".OCM" ) != 0 )  || ( strstr( dp->d_name, ".ocm" ) != 0 )          ) 
                    {
			printf( "%s\\n", dp->d_name );
 		        browser2->add(  dp->d_name  );
 		     }
                }
	}
	closedir( dirp );}
            xywh {40 145 95 25}
          }
          Fl_Button {} {
            label {&New}
            callback {redraw();
  char charo[PATH_MAX];
  strncpy( charo, "", PATH_MAX );
  strncat( charo , " screen -d -m  flnotepad  " , PATH_MAX - strlen( charo ) -1 );
  strncat( charo , " " , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , " \\"" , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , input_var_macro_filename->value() , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , "\\" " , PATH_MAX -  strlen( charo ) -1 );
  nsystem(  charo );}
            xywh {280 175 50 25}
          }
          Fl_Button {} {
            label {&Use macro}
            callback {redraw();

  printf( "============================\\n" );
  printf( "   MACRO                    \\n" );
  printf( "============================\\n" );
  
  printf( "   FILECOPY                  \\n" );
  printf( "   Source: %s                  \\n" ,  input_var_macro_filename->value()   );
  printf( "   Destination: %s                  \\n" ,  "macro.ocm"   );
  

  ncp( "macro.ocm" ,   input_var_macro_filename->value() );
  
  void_flfront_preview_browser1_refresh();}
            xywh {40 175 95 25}
          }
          Fl_Button {} {
            label {&View}
            callback {redraw();
  
  char charo[PATH_MAX];
  strncpy( charo, "", PATH_MAX );
  strncat( charo , " screen -d -m  flview   " , PATH_MAX - strlen( charo ) -1 );
  strncat( charo , " " , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , " \\"" , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , input_var_macro_filename->value() , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , "\\" " , PATH_MAX -  strlen( charo ) -1 );
  nsystem(  charo );}
            xywh {335 145 50 25}
          }
          Fl_Button {} {
            label {&Cat}
            callback {redraw();
  
  ncat( input_var_macro_filename->value() );}
            xywh {280 145 50 25}
          }
          Fl_Button {} {
            label {&Edit}
            callback {redraw();
  
  char charo[PATH_MAX];
  strncpy( charo, "", PATH_MAX );
  strncat( charo , " screen -d -m  fledit  " , PATH_MAX - strlen( charo ) -1 );
  strncat( charo , " " , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , " \\"" , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , input_var_macro_filename->value() , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , "\\" " , PATH_MAX -  strlen( charo ) -1 );
  nsystem(  charo );}
            xywh {335 175 50 25}
          }
          Fl_Button {} {
            label {Browse ocl}
            callback {redraw();

  printf( "============================\\n" );
  printf( "   MACRO                    \\n" );
  printf( "============================\\n" );

  nlsgrep( ".ocl" );
 
  printf( "  ocl: improved OC format with more features (ocl: OC Language).\\n" );
  printf( "  ocm: standard OC format.\\n" );
     
        browser2->clear();
	DIR *dirp;
	struct dirent *dp;
	dirp = opendir( "." );
	while  ((dp = readdir( dirp )) != NULL ) 
	{
		if (  strcmp( dp->d_name, "." ) != 0 )
		if (  strcmp( dp->d_name, ".." ) != 0 )
                {
                    if ( strstr( dp->d_name, ".ocl" ) != 0 ) 
                    {
			printf( "%s\\n", dp->d_name );
 		        browser2->add(  dp->d_name  );
 		     }
                }
	}
	closedir( dirp );}
            xywh {160 145 95 25}
          }
          Fl_Button {} {
            label {Use ocl}
            callback {redraw();

  printf( "============================\\n" );
  printf( "   MACRO (OCL with SKIP)    \\n" );
  printf( "============================\\n" );
  
  printf( "   FILECOPY                  \\n" );
  printf( "   Source: %s                  \\n" ,  input_var_macro_filename->value()   );
  printf( "   Destination: %s                  \\n" ,  "macro.ocm"   );
  
  ncpskip(  "macro.ocm" ,  input_var_macro_filename->value()  ,  "@&"  );}
            xywh {160 175 95 25}
          }
        }
        Fl_Group {} {
          label {File description} open
          xywh {420 120 430 365} box DOWN_BOX labeltype ENGRAVED_LABEL resizable
        } {
          Fl_Browser browser_macro_filecontent {
            xywh {425 125 420 355}
            code0 {browser_macro_filecontent->type(FL_HOLD_BROWSER);}
          }
        }
      }
      Fl_Group {} {
        label {Brow&ser} open
        xywh {40 85 825 415}
      } {
        Fl_Group {} {open
          xywh {50 110 660 325} box DOWN_BOX resizable
        } {
          Fl_File_Browser win_macro_flbrowser1 {
            callback {if ( win_macro_flbrowser1->value() >= 1 ) 
{

   
     win_macro_flbrowser1_output1->value(  win_macro_flbrowser1->text( win_macro_flbrowser1->value() ) );
 
 
   form_macro_statusbar->value(  win_macro_flbrowser1->text( win_macro_flbrowser1->value() ) );

 
 
 }}
            xywh {60 120 640 275} resizable
            code1 {win_macro_flbrowser1->type( FL_HOLD_BROWSER  );}
          }
          Fl_Output win_macro_flbrowser1_output1 {
            xywh {60 400 640 20} color 49 labelsize 12 textsize 12
          }
        }
        Fl_Button {} {
          label {&Browse}
          callback {win_macro_flbrowser1->clear();
     win_macro_flbrowser1->filter( 0 ); 
     win_macro_flbrowser1->load( "." );
     
     
     //eow}
          xywh {730 110 95 25}
        }
        Fl_Button {} {
          label {&Use macro}
          callback {//char mydirnow[2500];
//printf( "Current Directory: %s \\n", getcwd( mydirnow, 2500 ) );
  
redraw();

char foofile[PATH_MAX];
if ( win_macro_flbrowser1->value() >= 1 ) 
{
   // win_macro_flbrowser1_output1->value(  win_macro_flbrowser1->text( win_macro_flbrowser1->value() ) );
   snprintf( foofile , sizeof( foofile ), "%s" ,      win_macro_flbrowser1->text( win_macro_flbrowser1->value() )   ); 
   printf( "============================\\n" );
   printf( "   MACRO                    \\n" );
   printf( "============================\\n" );
   printf( "   FILECOPY                  \\n" );
   printf( "   Source: %s                \\n" ,  foofile  );
   printf( "   Destination: %s           \\n" ,  "macro.ocm"   );
   ncp( "macro.ocm" ,  foofile );
   
   void_flfront_preview_browser1_refresh();
}}
          xywh {730 145 95 25} labelfont 1
        }
        Fl_Button {} {
          label {&View}
          callback {// system( "   screen -d -m flpreview  " );

redraw();

  
 if ( win_macro_flbrowser1->value() >= 1 ) 
 {

   
    // win_macro_flbrowser1_output1->value(  win_macro_flbrowser1->text( win_macro_flbrowser1->value() ) );
 
 
   form_macro_statusbar->value(       win_macro_flbrowser1->text( win_macro_flbrowser1->value() )        );

 
 
   
  char charo[PATH_MAX];
  strncpy( charo, "", PATH_MAX );
  strncat( charo , " screen -d -m  flview   " , PATH_MAX - strlen( charo ) -1 );
  strncat( charo , " " , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , " \\"" , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo ,      win_macro_flbrowser1->text( win_macro_flbrowser1->value() )    , PATH_MAX -  strlen( charo ) -1 );
  strncat( charo , "\\" " , PATH_MAX -  strlen( charo ) -1 );
  nsystem(  charo );
 
 }}
          xywh {730 180 95 25}
        }
        Fl_Button {} {
          label {&Preview Util}
          callback {system( "   screen -d -m flpreview  " );}
          xywh {730 215 95 25}
        }
      }
    }
    Fl_Output form_macro_statusbar {
      xywh {15 520 725 25} color 49
    }
  }
  Fl_Window win6 {
    label Condition open
    xywh {1264 22 655 465} type Double resizable visible
  } {
    Fl_Box {} {
      label {FLTK OpenCalphad -- Condition}
      xywh {15 15 625 30} box ENGRAVED_BOX labeltype ENGRAVED_LABEL
    }
    Fl_Group {} {
      label {Set-Condition (Create)} open
      xywh {15 105 625 315} box DOWN_BOX labeltype ENGRAVED_LABEL resizable
    } {
      Fl_Input input_var_set_condition {
        label {set-con}
        xywh {90 135 535 25}
        code1 {input_var_set_condition->value( "t=1000 p=1e5 n=1 x(c)=0.2 " );}
      }
      Fl_Input input_var_calc_ymin {
        label Ymin
        xywh {90 280 535 25}
        code1 {input_var_calc_ymin->value( "500" );}
      }
      Fl_Input input_var_calc_ymax {
        label Ymax
        xywh {90 310 535 25}
        code1 {input_var_calc_ymax->value( "2000" );}
      }
      Fl_Input input_var_calc_ystep {
        label Ystep
        xywh {90 340 535 25}
        code1 {input_var_calc_ystep->value( "10" );}
      }
      Fl_Input input_var_calc_xmin {
        label Xmin
        xywh {90 195 535 25}
        code1 {input_var_calc_xmin->value( "0" );}
      }
      Fl_Input input_var_calc_xmax {
        label Xmax
        xywh {90 225 535 25}
        code1 {input_var_calc_xmax->value( "0.25" );}
      }
    }
    Fl_Button {} {
      label {&Close Frame}
      callback {win6->hide();}
      xywh {530 430 110 25}
    }
  }
  Fl_Window win7 {
    label Development open
    xywh {1336 491 395 480} type Double resizable visible
  } {
    Fl_Box {} {
      label {FLTK OpenCalphad -- Development}
      xywh {10 15 380 35} box ENGRAVED_BOX labeltype ENGRAVED_LABEL
    }
    Fl_Group {} {
      label {Path Binary} open
      xywh {10 90 375 100} box DOWN_BOX labeltype ENGRAVED_LABEL
    } {
      Fl_Button {} {
        label ccode
        callback {nsystem( " screen -d -m fledit flopencalphad_def.h  " );}
        xywh {20 105 100 25}
      }
      Fl_Button {} {
        label Inipath
        callback {redraw();

  printf( "============================\\n" );
  printf( "  CHANGE PATH               \\n" );
  printf( "============================\\n" );
  
  printf( "Change to...\\n" );
  chdir( inipath );
  
  char mydirnow[2500];
  printf( "Current Directory: %s \\n", getcwd( mydirnow, 2500 ) );}
        xywh {130 105 100 25}
      }
      Fl_Button {} {
        label Userpath
        callback {redraw();

  printf( "============================\\n" );
  printf( "  CHANGE PATH               \\n" );
  printf( "============================\\n" );
  
  printf( "Change to...\\n" );
  chdir( userpath );
  
  char mydirnow[2500];
  printf( "Current Directory: %s \\n", getcwd( mydirnow, 2500 ) );}
        xywh {245 105 115 25}
      }
      Fl_Button {} {
        label {chdir()}
        callback {redraw();

  printf( "============================\\n" );
  printf( "  CHANGE PATH               \\n" );
  printf( "============================\\n" );
  
  printf( "Change to...\\n" );
  chdir( dev_path_input1->value()  );
  
  char mydirnow[2500];
  printf( "Current Directory: %s \\n", getcwd( mydirnow, 2500 ) );}
        xywh {245 140 115 25}
      }
      Fl_Input dev_path_input1 {
        label {Path: }
        xywh {60 140 170 25}
      }
    }
    Fl_Button {} {
      label {&Close Frame}
      callback {win7->hide();}
      xywh {275 440 110 30}
    }
    Fl_Group {} {
      label Development open
      xywh {10 275 375 155} box DOWN_BOX labeltype ENGRAVED_LABEL
    } {
      Fl_Button {} {
        label {VIM &Macro}
        callback {redraw();
  
  nrun( " vim " ,  input_var_macro_filename->value() );}
        xywh {145 290 90 25}
      }
      Fl_Button {} {
        label {&VIM SIM}
        callback {redraw();
  
  nrun( " vim " , "macro.ocm" );}
        xywh {40 290 90 25}
      }
      Fl_Button {} {
        label {VIM &Database}
        callback {redraw();
  
  nrun( " vim " , input_var_tdb_database->value(  ) );}
        xywh {250 290 110 25}
      }
      Fl_Button {} {
        label {[&4] Plot!}
        callback {char mydirnow[2500];
  printf( "Current Directory: %s \\n", getcwd( mydirnow, 2500 ) );



  redraw();
  nsystem(  "  screen -d  -m  gnuplot ocgnu.plt  " );
  
  
  // oc6 bug 
  // gnuplot ocgnu.plt  &}
        xywh {215 325 145 25}
      }
      Fl_Button {} {
        label {[&3] Compute!}
        callback {char mydirnow[2500];
  printf( "Current Directory: %s \\n", getcwd( mydirnow, 2500 ) );



  redraw();
  nsystem(  "  screen -d  -m   xterm -e   oc   macro.ocm " );
  
  // oc6 bug 
  // gnuplot ocgnu.plt  &}
        xywh {40 325 150 25}
      }
      Fl_Button {} {
        label {GnuPlot XForward/Unix}
        callback {char mydirnow[2500];
  printf( "Current Directory: %s \\n", getcwd( mydirnow, 2500 ) );



  redraw();
  
  printf(   "Export Result on Solaris/Unix/BSD Simulation Station\\n" );
  
  nsystem(  " env DISPLAY=192.168.1.2:0    screen -d  -m  gnuplot ocgnu.plt  " );
  
  
  
  // oc6 bug 
  // gnuplot ocgnu.plt  &}
        xywh {40 360 320 25}
      }
      Fl_Check_Button var_calc_rm_ocgnu {
        label {Calculation with previous rm of ocgnu.plt}
        xywh {40 395 25 25} down_box DOWN_BOX
        code1 {var_calc_rm_ocgnu->value( 1 );}
      }
    }
  }
  Fl_Window form_element_pse {
    label Periodic open
    xywh {1207 52 680 435} type Double resizable visible
  } {
    Fl_Button {} {
      label {&Close frame}
      callback {form_element_pse->hide();}
      xywh {15 400 650 25} labelfont 1
    }
    Fl_Group {} {open
      xywh {15 55 650 335} box DOWN_BOX resizable
    } {
      Fl_Button {} {
        label H
        callback {void_form_add_new_element( "h" );}
        xywh {25 65 30 25} color 190
      }
      Fl_Button {} {
        label Li
        callback {void_form_add_new_element( "li" );}
        xywh {25 95 30 25} color 180
      }
      Fl_Button {} {
        label Na
        callback {void_form_add_new_element( "na" );}
        xywh {25 125 30 25} color 180
      }
      Fl_Button {} {
        label K
        callback {void_form_add_new_element( "k" );}
        xywh {25 155 30 25} color 180
      }
      Fl_Button {} {
        label Rb
        callback {void_form_add_new_element( "rb" );}
        xywh {25 185 30 25} color 180
      }
      Fl_Button {} {
        label Cs
        callback {void_form_add_new_element( "cs" );}
        xywh {25 215 30 25} color 180
      }
      Fl_Button {} {
        label Fr
        callback {void_form_add_new_element( "fr" );}
        xywh {25 245 30 25} color 180
      }
      Fl_Button {} {
        label Be
        callback {void_form_add_new_element( "be" );}
        xywh {60 95 30 25} color 90
      }
      Fl_Button {} {
        label Mg
        callback {void_form_add_new_element( "mg" );}
        xywh {60 125 30 25} color 90
      }
      Fl_Button {} {
        label Ca
        callback {void_form_add_new_element( "ca" );}
        xywh {60 155 30 25} color 90
      }
      Fl_Button {} {
        label Sr
        callback {void_form_add_new_element( "sr" );}
        xywh {60 185 30 25} color 90
      }
      Fl_Button {} {
        label Ba
        callback {void_form_add_new_element( "ba" );}
        xywh {60 215 30 25} color 90
      }
      Fl_Button {} {
        label Ra
        callback {void_form_add_new_element( "ra" );}
        xywh {60 245 30 25} color 90
      }
      Fl_Button {} {
        label Sc
        callback {void_form_add_new_element( "sc" );}
        xywh {95 155 30 25} color 174
      }
      Fl_Button {} {
        label Y
        callback {void_form_add_new_element( "y" );}
        xywh {95 185 30 25} color 174
      }
      Fl_Button {} {
        label Lu
        callback {void_form_add_new_element( "lu" );}
        xywh {95 215 30 25} color 174
      }
      Fl_Button {} {
        label Lr
        callback {void_form_add_new_element( "lr" );}
        xywh {95 245 30 25}
      }
      Fl_Button {} {
        label Ti
        callback {void_form_add_new_element( "ti" );}
        xywh {130 155 30 25} color 174
      }
      Fl_Button {} {
        label Zr
        callback {void_form_add_new_element( "zr" );}
        xywh {130 185 30 25} color 174
      }
      Fl_Button {} {
        label Hf
        callback {void_form_add_new_element( "hf" );}
        xywh {130 215 30 25} color 174
      }
      Fl_Button {} {
        label Rf
        callback {void_form_add_new_element( "rf" );}
        xywh {130 245 30 25}
      }
      Fl_Button {} {
        label V
        callback {void_form_add_new_element( "v" );}
        xywh {165 155 30 25} color 174
      }
      Fl_Button {} {
        label Nb
        callback {void_form_add_new_element( "nb" );}
        xywh {165 185 30 25} color 174
      }
      Fl_Button {} {
        label Ta
        callback {void_form_add_new_element( "ta" );}
        xywh {165 215 30 25} color 174
      }
      Fl_Button {} {
        label Db
        callback {void_form_add_new_element( "db" );}
        xywh {165 245 30 25}
      }
      Fl_Button {} {
        label Cr
        callback {void_form_add_new_element( "cr" );}
        xywh {200 155 30 25} color 174
      }
      Fl_Button {} {
        label Mo
        callback {void_form_add_new_element( "mo" );}
        xywh {200 185 30 25} color 174
      }
      Fl_Button {} {
        label W
        callback {void_form_add_new_element( "w" );}
        xywh {200 215 30 25} color 174
      }
      Fl_Button {} {
        label Sg
        callback {void_form_add_new_element( "sg" );}
        xywh {200 245 30 25}
      }
      Fl_Button {} {
        label Mn
        callback {void_form_add_new_element( "mn" );}
        xywh {235 155 30 25} color 174
      }
      Fl_Button {} {
        label Tc
        callback {system( " xterm   "  );}
        xywh {235 185 30 25} color 174
      }
      Fl_Button {} {
        label Re
        callback {void_form_add_new_element( "re" );}
        xywh {235 215 30 25} color 174
      }
      Fl_Button {} {
        label Bh
        callback {void_form_add_new_element( "bh" );}
        xywh {235 245 30 25}
      }
      Fl_Button {} {
        label Fe
        callback {void_form_add_new_element( "fe" );}
        xywh {270 155 30 25} color 174
      }
      Fl_Button {} {
        label Ru
        callback {void_form_add_new_element( "ru" );}
        xywh {270 185 30 25} color 174
      }
      Fl_Button {} {
        label Os
        callback {void_form_add_new_element( "os" );}
        xywh {270 215 30 25} color 174
      }
      Fl_Button {} {
        label Hs
        callback {void_form_add_new_element( "hs" );}
        xywh {270 245 30 25}
      }
      Fl_Button {} {
        label Co
        callback {void_form_add_new_element( "co" );}
        xywh {305 155 30 25} color 174
      }
      Fl_Button {} {
        label Rh
        callback {void_form_add_new_element( "rh" );}
        xywh {305 185 30 25} color 174
      }
      Fl_Button {} {
        label Ir
        callback {void_form_add_new_element( "ir" );}
        xywh {305 215 30 25} color 174
      }
      Fl_Button {} {
        label Mt
        callback {void_form_add_new_element( "mt" );}
        xywh {305 245 30 25}
      }
      Fl_Button {} {
        label Ni
        callback {void_form_add_new_element( "ni" );}
        xywh {340 155 30 25} color 174
      }
      Fl_Button {} {
        label Pd
        callback {void_form_add_new_element( "pd" );}
        xywh {340 185 30 25} color 174
      }
      Fl_Button {} {
        label Pt
        callback {void_form_add_new_element( "pt" );}
        xywh {340 215 30 25} color 174
      }
      Fl_Button {} {
        label Ds
        callback {void_form_add_new_element( "ds" );}
        xywh {340 245 30 25}
      }
      Fl_Button {} {
        label Cu
        callback {void_form_add_new_element( "cu" );}
        xywh {375 155 30 25} color 174
      }
      Fl_Button {} {
        label Ag
        callback {void_form_add_new_element( "ag" );}
        xywh {375 185 30 25} color 174
      }
      Fl_Button {} {
        label Au
        callback {void_form_add_new_element( "au" );}
        xywh {375 215 30 25} color 174
      }
      Fl_Button {} {
        label Rg
        callback {void_form_add_new_element( "rg" );}
        xywh {375 245 30 25}
      }
      Fl_Button {} {
        label Zn
        callback {void_form_add_new_element( "zn" );}
        xywh {410 155 30 25} color 174
      }
      Fl_Button {} {
        label Cd
        callback {void_form_add_new_element( "cd" );}
        xywh {410 185 30 25} color 174
      }
      Fl_Button {} {
        label Hg
        callback {system( " xterm   "  );}
        xywh {410 215 30 25} color 174
      }
      Fl_Button {} {
        label Cn
        callback {void_form_add_new_element( "cn" );}
        xywh {410 245 30 25}
      }
      Fl_Button {} {
        label B
        callback {void_form_add_new_element( "b" );}
        xywh {445 95 30 25} color 252
      }
      Fl_Button {} {
        label Al
        callback {void_form_add_new_element( "al" );}
        xywh {445 125 30 25} color 237
      }
      Fl_Button {} {
        label Ga
        callback {void_form_add_new_element( "ga" );}
        xywh {445 155 30 25} color 237
      }
      Fl_Button {} {
        label In
        callback {void_form_add_new_element( "In" );}
        xywh {445 185 30 25} color 237
      }
      Fl_Button {} {
        label TI
        callback {void_form_add_new_element( "tl" );}
        xywh {445 215 30 25} color 237
      }
      Fl_Button {} {
        label Uut
        callback {void_form_add_new_element( "uut" );}
        xywh {445 245 30 25}
      }
      Fl_Button {} {
        label C
        callback {void_form_add_new_element( "c" );}
        xywh {480 95 30 25} color 70
      }
      Fl_Button {} {
        label Si
        callback {void_form_add_new_element( "si" );}
        xywh {480 125 30 25} color 252
      }
      Fl_Button {} {
        label Ge
        callback {void_form_add_new_element( "ge" );}
        xywh {480 155 30 25} color 252
      }
      Fl_Button {} {
        label Sn
        callback {void_form_add_new_element( "sn" );}
        xywh {480 185 30 25} color 237
      }
      Fl_Button {} {
        label Pb
        callback {void_form_add_new_element( "pb" );}
        xywh {480 215 30 25} color 237
      }
      Fl_Button {} {
        label Uuq
        callback {void_form_add_new_element( "uuq" );}
        xywh {480 245 30 25}
      }
      Fl_Button {} {
        label N
        callback {void_form_add_new_element( "n" );}
        xywh {515 95 30 25} color 70
      }
      Fl_Button {} {
        label P
        callback {void_form_add_new_element( "p" );}
        xywh {515 125 30 25} color 70
      }
      Fl_Button {} {
        label As
        callback {void_form_add_new_element( "as" );}
        xywh {515 155 30 25} color 252
      }
      Fl_Button {} {
        label Sb
        callback {void_form_add_new_element( "sb" );}
        xywh {515 185 30 25} color 252
      }
      Fl_Button {} {
        label Bi
        callback {void_form_add_new_element( "bi" );}
        xywh {515 215 30 25} color 237
      }
      Fl_Button {} {
        label Uup
        callback {void_form_add_new_element( "uup" );}
        xywh {515 245 30 25}
      }
      Fl_Button {} {
        label O
        callback {void_form_add_new_element( "o" );}
        xywh {550 95 30 25} color 70
      }
      Fl_Button {} {
        label S
        callback {void_form_add_new_element( "s" );}
        xywh {550 125 30 25} color 70
      }
      Fl_Button {} {
        label Se
        callback {void_form_add_new_element( "se" );}
        xywh {550 155 30 25} color 70
      }
      Fl_Button {} {
        label Te
        callback {void_form_add_new_element( "te" );}
        xywh {550 185 30 25} color 252
      }
      Fl_Button {} {
        label Po
        callback {void_form_add_new_element( "po" );}
        xywh {550 215 30 25} color 252
      }
      Fl_Button {} {
        label Uuh
        callback {void_form_add_new_element( "uuh" );}
        xywh {550 245 30 25}
      }
      Fl_Button {} {
        label F
        callback {void_form_add_new_element( "f" );}
        xywh {585 95 30 25} color 252
      }
      Fl_Button {} {
        label Cl
        callback {void_form_add_new_element( "cl" );}
        xywh {585 125 30 25} color 252
      }
      Fl_Button {} {
        label Br
        callback {void_form_add_new_element( "br" );}
        xywh {585 155 30 25} color 252
      }
      Fl_Button {} {
        label I
        callback {void_form_add_new_element( "I" );}
        xywh {585 185 30 25} color 252
      }
      Fl_Button {} {
        label At
        callback {void_form_add_new_element( "at" );}
        xywh {585 215 30 25} color 252
      }
      Fl_Button {} {
        label Uus
        callback {void_form_add_new_element( "uus" );}
        xywh {585 245 30 25}
      }
      Fl_Button {} {
        label Ne
        callback {void_form_add_new_element( "ne" );}
        xywh {620 95 30 25} color 9 labelfont 1
      }
      Fl_Button {} {
        label Ar
        callback {void_form_add_new_element( "ar" );}
        xywh {620 125 30 25} color 9 labelfont 1
      }
      Fl_Button {} {
        label Kr
        callback {void_form_add_new_element( "kr" );}
        xywh {620 155 30 25} color 9 labelfont 1
      }
      Fl_Button {} {
        label Xe
        callback {void_form_add_new_element( "xe" );}
        xywh {620 185 30 25} color 9 labelfont 1
      }
      Fl_Button {} {
        label Rn
        callback {void_form_add_new_element( "rn" );}
        xywh {620 215 30 25} color 9 labelfont 1
      }
      Fl_Button {} {
        label Uuo
        callback {void_form_add_new_element( "uuo" );}
        xywh {620 245 30 25}
      }
      Fl_Button {} {
        label He
        callback {void_form_add_new_element( "he" );}
        xywh {620 65 30 25} color 9 labelfont 1
      }
      Fl_Button {} {
        label La
        callback {void_form_add_new_element( "la" );}
        xywh {95 310 30 25}
      }
      Fl_Button {} {
        label Ac
        callback {system( " xterm   "  );}
        xywh {95 340 30 25}
      }
      Fl_Button {} {
        label Ce
        callback {system( " xterm   "  );}
        xywh {130 310 30 25}
      }
      Fl_Button {} {
        label Th
        callback {system( " xterm   "  );}
        xywh {130 340 30 25}
      }
      Fl_Button {} {
        label Pr
        callback {system( " xterm   "  );}
        xywh {165 310 30 25}
      }
      Fl_Button {} {
        label Pa
        callback {system( " xterm   "  );}
        xywh {165 340 30 25}
      }
      Fl_Button {} {
        label Nd
        callback {system( " xterm   "  );}
        xywh {200 310 30 25}
      }
      Fl_Button {} {
        label U
        callback {system( " xterm   "  );}
        xywh {200 340 30 25}
      }
      Fl_Button {} {
        label Pm
        callback {system( " xterm   "  );}
        xywh {235 310 30 25}
      }
      Fl_Button {} {
        label Np
        callback {system( " xterm   "  );}
        xywh {235 340 30 25}
      }
      Fl_Button {} {
        label Sm
        callback {system( " xterm   "  );}
        xywh {270 310 30 25}
      }
      Fl_Button {} {
        label Pu
        callback {system( " xterm   "  );}
        xywh {270 340 30 25}
      }
      Fl_Button {} {
        label Eu
        callback {system( " xterm   "  );}
        xywh {305 310 30 25}
      }
      Fl_Button {} {
        label Am
        callback {system( " xterm   "  );}
        xywh {305 340 30 25}
      }
      Fl_Button {} {
        label Gd
        callback {system( " xterm   "  );}
        xywh {340 310 30 25}
      }
      Fl_Button {} {
        label Cm
        callback {system( " xterm   "  );}
        xywh {340 340 30 25}
      }
      Fl_Button {} {
        label Tb
        callback {system( " xterm   "  );}
        xywh {375 310 30 25}
      }
      Fl_Button {} {
        label Bk
        callback {system( " xterm   "  );}
        xywh {375 340 30 25}
      }
      Fl_Button {} {
        label Dy
        callback {system( " xterm   "  );}
        xywh {410 310 30 25}
      }
      Fl_Button {} {
        label Cf
        callback {system( " xterm   "  );}
        xywh {410 340 30 25}
      }
      Fl_Button {} {
        label Ho
        callback {void_form_add_new_element( "ho" );}
        xywh {445 310 30 25}
      }
      Fl_Button {} {
        label Es
        callback {system( " xterm   "  );}
        xywh {445 340 30 25}
      }
      Fl_Button {} {
        label Er
        callback {void_form_add_new_element( "er" );}
        xywh {480 310 30 25}
      }
      Fl_Button {} {
        label Fm
        callback {system( " xterm   "  );}
        xywh {480 340 30 25}
      }
      Fl_Button {} {
        label Tm
        callback {system( " xterm   "  );}
        xywh {515 310 30 25}
      }
      Fl_Button {} {
        label Md
        callback {system( " xterm   "  );}
        xywh {515 340 30 25}
      }
      Fl_Button {} {
        label Yb
        callback {system( " xterm   "  );}
        xywh {550 310 30 25}
      }
      Fl_Button {} {
        label No
        callback {system( " xterm   "  );}
        xywh {550 340 30 25}
      }
    }
    Fl_Box {} {
      label {PERIODIC TABLE}
      xywh {15 5 650 35} box ENGRAVED_BOX labelfont 1
    }
  }
  Fl_Window form1_periodic_information {
    label {Periodic -- Information} open
    xywh {1147 489 780 535} type Double resizable visible
  } {
    Fl_Button {} {
      label {&Close frame}
      callback {form1_periodic_information->hide();}
      xywh {20 495 740 25} labelfont 1
    }
    Fl_Group {} {open
      xywh {20 50 740 440} box DOWN_BOX resizable
    } {
      Fl_Browser form_content_browser1 {
        xywh {30 60 720 420}
      }
    }
    Fl_Box {} {
      label {ELEMENT INFORMATION}
      xywh {20 10 740 30} box ENGRAVED_BOX labelfont 1
    }
  }
}

Function {addkeypress( int keypress )} {} {
  code {//char str[PATH_MAX]; 
   //snprintf( str , sizeof( str ), "%s%c", inputline->value() , keypress ); 
   //inputline->value( str  );} {}
}

Function {main( int argc, char *argv[] )} {open return_type int
} {
  code {char mydirnow[2500];  
  strncpy( inipath , getcwd( mydirnow, 2500 ), 2500 );
  
  // working dir 
  if ( argc == 2)
  if ( strcmp( argv[1] , "" ) !=  0 )
  {
          chdir( argv[ 1 ] );
  }
  printf( "Current Directory: %s \\n", getcwd( mydirnow, 2500 ) );
  strncpy( userpath , getcwd( mydirnow, 2500 ), 2500 );


  // vars
  strncpy( var_system, "fe c ", PATH_MAX);
  //output_system->value( var_system );  <- seg.

  make_window();
  win1->show();

  Fl::run();} {}
}

Function {void_flfront_preview_browser1_refresh()} {open
} {
  code {flfront_preview_browser1->clear();    
  
  char filein[PATH_MAX];
  strncpy( filein, "macro.ocm"  , PATH_MAX );
       
  
  int fetchi;
  FILE *fp5;
  FILE *fp6;
  char fetchline[PATH_MAX];
  char fetchlinetmp[PATH_MAX];
  
  if ( fexist( filein ) == 1 )
  {
    fp6 = fopen( filein , "rb");
    while( !feof(fp6) ) 
    {
          fgets(fetchlinetmp, PATH_MAX, fp6); 
          strncpy( fetchline, "" , PATH_MAX );
          for( fetchi = 0 ; ( fetchi <= strlen( fetchlinetmp ) ); fetchi++ )
            if ( fetchlinetmp[ fetchi ] != '\\n' )
              fetchline[fetchi]=fetchlinetmp[fetchi];
              
          if ( !feof(fp6)  )
              flfront_preview_browser1->add( fetchline );    

     }
     fclose( fp6 );
 }} {}
}

Function {void_plot_preview_plotfile( const  char *foopatfile  )} {open
} {
  code {flplot_preview_browser->clear();    
  
  char filein[PATH_MAX];
  strncpy( filein, foopatfile  , PATH_MAX );
       
  
  int fetchi;
  FILE *fp5;
  FILE *fp6;
  char fetchline[PATH_MAX];
  char fetchlinetmp[PATH_MAX];
  
  if ( fexist( filein ) == 1 )
  {
    fp6 = fopen( filein , "rb");
    while( !feof(fp6) ) 
    {
          fgets(fetchlinetmp, PATH_MAX, fp6); 
          strncpy( fetchline, "" , PATH_MAX );
          for( fetchi = 0 ; ( fetchi <= strlen( fetchlinetmp ) ); fetchi++ )
            if ( fetchlinetmp[ fetchi ] != '\\n' )
              fetchline[fetchi]=fetchlinetmp[fetchi];
              
          if ( !feof(fp6)  )
              flplot_preview_browser->add( fetchline );    

     }
     fclose( fp6 );
 }} {}
}

Function {ncopysetterm( const char *foofileout,  const  char *foofilein, const  char *fooxdriver  )} {open return_type int
} {
  code {// foofileout foofilein    
 // *fooxdriver
  printf(" Copy with updating the plot code\\n" );
  
  
  int i;
  FILE *fp;
  FILE *fp1;
  FILE *fp2;
  
  char strline[PATH_MAX];
  char strlinein[PATH_MAX];

  printf(" Path: %s\\n", getcwd( strline, PATH_MAX ) );
  printf(" Source: %s\\n", foofilein );
  printf(" Target: %s\\n", foofileout );
 
  if ( fexist( foofilein ) == 1 )
  {
  
      printf(" Source: %s\\n", foofilein );
      printf(" Target: %s\\n", foofileout );

  
    fp = fopen( foofilein , "rb");
    fp2 = fopen( foofileout , "wb");

    while( !feof(fp) )
    {
	    fgets( strlinein , PATH_MAX, fp);
	    //strncpy( strline , "" , PATH_MAX );
	    
	    if ( strlinein[ 0 ] == '\#' )  
	    {
	    	    printf( "%s", strlinein ); 
  	            fputs( strlinein , fp2  );
	    }
	    else if ( strstr( strlinein, "set term" ) != 0 ) 
	    {
 		    printf( "==> Set Term %s\\n", strlinein ); 
 		 
 		    if ( strcmp( plot_gnuplot_term_drivername->value(),    "x11" ) == 0 ) 
      		          fputs( "set termin x11 \\n", fp2 );
      		    else if ( strcmp( plot_gnuplot_term_drivername->value(),    "wxt" ) == 0 ) 
      		          fputs( "set termin wxt \\n", fp2 );
      		    else if ( strcmp( plot_gnuplot_term_drivername->value() ,    "qt" ) == 0 ) 
      		          fputs( "set termin qt \\n", fp2 );      		          
 		    else 
 		    {
     		          fputs( "\\n", fp2 );
 		          fputs( fooxdriver , fp2 );
        		  fputs( "\\n", fp2 );
 		    }		              
            }
	    else 
	    {
	    	    printf( "%s", strlinein ); 
  	            fputs( strlinein , fp2  );
	    }
     }
     
     fclose( fp );
     fclose( fp2 );
   }} {}
}

Function {load_content( int fooz )} {open
} {
  code {} {}
}

Function {void_form_add_new_element( const char *foonew )} {open
} {
  code {strncat( var_system , foonew , PATH_MAX - strlen( var_system ) -1 );
  strncat( var_system , " " ,  PATH_MAX -  strlen( var_system ) -1 );
  output_system->value( var_system );
  var_calc_number_element++;
  add_new_element( foonew  );
  redraw();} {}
}

Function {void_gui_copy_un2ocm( const char *foonew )} {open
} {
  code {//flfront_preview_browser1->clear();    

/*  
  char filein[PATH_MAX];
  strncpy( filein, "editor.ocm"  , PATH_MAX );
  // foonew 
  
  int fetchi;
  FILE *fp5;
  FILE *fp6;
  char fetchline[PATH_MAX];
  char fetchlinetmp[PATH_MAX];
  
  if ( fexist( filein ) == 1 )
  {
    fp6 = fopen( filein , "rb");
    while( !feof(fp6) ) 
    {
          fgets(fetchlinetmp, PATH_MAX, fp6); 
          strncpy( fetchline, "" , PATH_MAX );
          for( fetchi = 0 ; ( fetchi <= strlen( fetchlinetmp ) ); fetchi++ )
            if ( fetchlinetmp[ fetchi ] != '\\n' )
              fetchline[fetchi]=fetchlinetmp[fetchi];
              
          if ( !feof(fp6)  )
          {
             // flfront_preview_browser1->add( fetchline );    
             printf( " FILE =>> %s\\n" , fetchline );
          }

     }
     fclose( fp6 );
 }
 */} {}
}
