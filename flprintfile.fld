# data file for the Fltk User Interface Designer (fluid)
version 1.0304
header_name {.h}
code_name {.cxx}
decl {\#include <stdio.h>} {private local
}

decl {\#include <stdlib.h>} {private local
}

decl {\#include "headerf.h"} {private local
}

Function {redraw()} {open
} {
  code {printf("redraw!\\n");

char cwd[PATH_MAX];

/*

      
        browser->clear();
	DIR *dirp;
	struct dirent *dp;
	dirp = opendir( "." );
	while  ((dp = readdir( dirp )) != NULL ) 
	{
		if (  strcmp( dp->d_name, "." ) != 0 )
		if (  strcmp( dp->d_name, ".." ) != 0 )
		if ( dp->d_name[0] != '.' ) 
                {

 		     if ( fexist( dp->d_name ) == 2 ) 
 		     {
 		     	printf( "%s\\n", dp->d_name );   browser->add(  dp->d_name  );
 		     } 
 		     
 		     else if ( filter_pdf->value() == 0 )
 		     {
 		     	printf( "%s\\n", dp->d_name );   browser->add(  dp->d_name  );

 		     }
 		     
 		    else if ( filter_pdf->value() == 1 ) 
 		    {  
 		        if  (   ( strstr( dp->d_name, ".pdf" ) != 0 )  || ( strstr( dp->d_name, ".pdf" ) != 0 )   ) 
                        {  printf( "%s\\n", dp->d_name );   browser->add(  dp->d_name  ); }
                        else
                        {    
                        } 
 		    }   
 		     
 		     
 		     
                }
	}
	closedir( dirp );
	
	
	fielddirectory->value(  getcwd( cwd, PATH_MAX) );
	
	
	*/
	
	
        
    browser->clear();
    char str_filter[PATH_MAX];
    strncpy( str_filter, "", PATH_MAX );
    
    if ( filefilter->value() == 1 ) 
    {
        if ( strcmp( filefilterstr->value() , "" ) == 0 ) 
          browser->filter( "*.pdf" ); 
        else
          browser->filter( filefilterstr->value() ); 
    }
    else
    {
       browser->filter( 0 ); 
    }
    
    browser->load( "." );
        
    char curcwd[PATH_MAX];   
    char str[PATH_MAX];   
    strncpy( str, getcwd( curcwd, PATH_MAX ) , PATH_MAX );
    output_curdir->value( str );
    
    
    
    //printf( " Cur Dir %s\\n" , str );
    //output_curdir->value( getcwd( curcwd, PATH_MAX ) );
    //tput_curfile} {}
}

Function {make_window()} {open
} {
  Fl_Window win1 {
    label Documents open
    xywh {497 300 300 450} type Double resizable visible
  } {
    Fl_Button {} {
      label {Op&en}
      callback {// output_curfile->value(  browser->text( browser->value() ) );




char cmdi[PATH_MAX];
char thefile[PATH_MAX];


if ( browser->value() >= 1 ) 
{

   strncpy( thefile,   browser->text( browser->value() )  , PATH_MAX );

 
   if ( fexist(  thefile    ) == 2 )
   {
         chdir( thefile  );
         redraw();
   }
   else if ( fexist( thefile  ) == 1 )
   {
	
	strncpy( cmdi , " screen -d -m ncrun  " , PATH_MAX );
	strncat( cmdi , " " , PATH_MAX - strlen( cmdi ) -1 );
	strncat( cmdi , " \\""  , PATH_MAX - strlen( cmdi ) -1 );
	strncat( cmdi ,   thefile  , PATH_MAX - strlen( cmdi ) -1 );
	strncat( cmdi , "\\" "  , PATH_MAX - strlen( cmdi ) -1 );
	strncat( cmdi , " " , PATH_MAX - strlen( cmdi ) -1 );
	system( cmdi );
   }
   
  }  
  //redraw();}
      xywh {5 380 75 25} labelfont 1
    }
    Fl_Group {} {open
      xywh {5 60 290 285} box DOWN_BOX resizable
    } {
      Fl_File_Browser browser {
        callback {/// to copy to selection !! 
   ///  inputbox->value(  flbrow->text( flbrow->value() ) );

 //  pansel = 2 ; 
 
   
  // runfilename->value(  flbrow->text( flbrow->value() ) );
  
  
  output_curfile->value(  browser->text( browser->value() ) );} selected
        xywh {10 65 280 275}
        code1 {browser->type( FL_HOLD_BROWSER  );}
      }
    }
    Fl_Group {} {
      label {FLTK Print File} open
      xywh {5 5 290 20} box UP_BOX labeltype ENGRAVED_LABEL align 0
    } {}
    Fl_Output output_curfile {
      xywh {5 410 250 25} color 49
    }
    Fl_Button {} {
      label {&Dir}
      callback {chdir( ".." );

browser->value( 1 );


redraw();}
      xywh {90 380 75 25} labelfont 1
    }
    Fl_Output output_curdir {
      xywh {5 30 290 25}
    }
    Fl_Check_Button filefilter {
      label {&Filt.}
      callback {if ( strcmp( filefilterstr->value() , "" ) == 0 ) 
           filefilterstr->value( "*.pdf" );

redraw();}
      xywh {245 350 50 25} down_box DOWN_BOX
    }
    Fl_Button {} {
      label {Print!}
      callback {// output_curfile->value(  browser->text( browser->value() ) );




char cmdi[PATH_MAX];
char thefile[PATH_MAX];


if ( browser->value() >= 1 ) 
{

   strncpy( thefile,   browser->text( browser->value() )  , PATH_MAX );

 
   if ( fexist(  thefile    ) == 2 )
   {
         chdir( thefile  );
         redraw();
   }
   else if ( fexist( thefile  ) == 1 )
   {
	
	strncpy( cmdi , " xterm -e  lpr -PHLL2340D  -o fit-to-page -o media=A4        " , PATH_MAX );
	strncat( cmdi , " " , PATH_MAX - strlen( cmdi ) -1 );
	strncat( cmdi , " \\""  , PATH_MAX - strlen( cmdi ) -1 );
	strncat( cmdi ,   thefile  , PATH_MAX - strlen( cmdi ) -1 );
	strncat( cmdi , "\\" "  , PATH_MAX - strlen( cmdi ) -1 );
	strncat( cmdi , " " , PATH_MAX - strlen( cmdi ) -1 );
	system( cmdi );
   }
   
  }  
  //redraw();}
      xywh {175 380 80 25} labelfont 1
    }
    Fl_Input filefilterstr {
      xywh {10 350 230 25}
    }
    Fl_Button {} {
      label {&?}
      callback {system( " screen -d -m  flprinter " );}
      xywh {265 380 30 25} labelfont 1
    }
    Fl_Button {} {
      callback {exit( 0 );}
      image {../../../../nuvola/16x16/actions/stop.png} xywh {265 410 30 25} labelfont 1
    }
  }
}

Function {main( int argc, char *argv[])} {open return_type int
} {
  code {printf( " == FLTK == \\n" );
int filter_pdf_arg = 0;


////////////////////////////////////////////////////////
  if ( argc == 2)
  if ( strcmp( argv[1] , "--pdf" ) ==  0 )
  {
    filter_pdf_arg = 1 ;      
  }
  else if ( strcmp( argv[1] , "" ) !=  0 )
  {
          chdir( argv[ 1 ] );
  }

  char mydirnow[2500];
  printf( "Current Directory: %s \\n", getcwd( mydirnow, 2500 ) );


  make_window();
  
      
  redraw();


 
  win1->show();
  
  

  Fl::run();} {}
}
